
thesaurus-lookup:     file format elf64-x86-64


Disassembly of section .init:

0000000000000c88 <_init>:
 c88:	48 83 ec 08          	sub    $0x8,%rsp
 c8c:	48 8b 05 55 33 20 00 	mov    0x203355(%rip),%rax        # 203fe8 <__gmon_start__>
 c93:	48 85 c0             	test   %rax,%rax
 c96:	74 02                	je     c9a <_init+0x12>
 c98:	ff d0                	callq  *%rax
 c9a:	48 83 c4 08          	add    $0x8,%rsp
 c9e:	c3                   	retq   

Disassembly of section .plt:

0000000000000ca0 <.plt>:
 ca0:	ff 35 2a 32 20 00    	pushq  0x20322a(%rip)        # 203ed0 <_GLOBAL_OFFSET_TABLE_+0x8>
 ca6:	ff 25 2c 32 20 00    	jmpq   *0x20322c(%rip)        # 203ed8 <_GLOBAL_OFFSET_TABLE_+0x10>
 cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000cb0 <lfind@plt>:
 cb0:	ff 25 2a 32 20 00    	jmpq   *0x20322a(%rip)        # 203ee0 <lfind@GLIBC_2.2.5>
 cb6:	68 00 00 00 00       	pushq  $0x0
 cbb:	e9 e0 ff ff ff       	jmpq   ca0 <.plt>

0000000000000cc0 <free@plt>:
 cc0:	ff 25 22 32 20 00    	jmpq   *0x203222(%rip)        # 203ee8 <free@GLIBC_2.2.5>
 cc6:	68 01 00 00 00       	pushq  $0x1
 ccb:	e9 d0 ff ff ff       	jmpq   ca0 <.plt>

0000000000000cd0 <putchar@plt>:
 cd0:	ff 25 1a 32 20 00    	jmpq   *0x20321a(%rip)        # 203ef0 <putchar@GLIBC_2.2.5>
 cd6:	68 02 00 00 00       	pushq  $0x2
 cdb:	e9 c0 ff ff ff       	jmpq   ca0 <.plt>

0000000000000ce0 <puts@plt>:
 ce0:	ff 25 12 32 20 00    	jmpq   *0x203212(%rip)        # 203ef8 <puts@GLIBC_2.2.5>
 ce6:	68 03 00 00 00       	pushq  $0x3
 ceb:	e9 b0 ff ff ff       	jmpq   ca0 <.plt>

0000000000000cf0 <qsort@plt>:
 cf0:	ff 25 0a 32 20 00    	jmpq   *0x20320a(%rip)        # 203f00 <qsort@GLIBC_2.2.5>
 cf6:	68 04 00 00 00       	pushq  $0x4
 cfb:	e9 a0 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d00 <fclose@plt>:
 d00:	ff 25 02 32 20 00    	jmpq   *0x203202(%rip)        # 203f08 <fclose@GLIBC_2.2.5>
 d06:	68 05 00 00 00       	pushq  $0x5
 d0b:	e9 90 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d10 <strlen@plt>:
 d10:	ff 25 fa 31 20 00    	jmpq   *0x2031fa(%rip)        # 203f10 <strlen@GLIBC_2.2.5>
 d16:	68 06 00 00 00       	pushq  $0x6
 d1b:	e9 80 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d20 <__stack_chk_fail@plt>:
 d20:	ff 25 f2 31 20 00    	jmpq   *0x2031f2(%rip)        # 203f18 <__stack_chk_fail@GLIBC_2.4>
 d26:	68 07 00 00 00       	pushq  $0x7
 d2b:	e9 70 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d30 <strchr@plt>:
 d30:	ff 25 ea 31 20 00    	jmpq   *0x2031ea(%rip)        # 203f20 <strchr@GLIBC_2.2.5>
 d36:	68 08 00 00 00       	pushq  $0x8
 d3b:	e9 60 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d40 <printf@plt>:
 d40:	ff 25 e2 31 20 00    	jmpq   *0x2031e2(%rip)        # 203f28 <printf@GLIBC_2.2.5>
 d46:	68 09 00 00 00       	pushq  $0x9
 d4b:	e9 50 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d50 <__assert_fail@plt>:
 d50:	ff 25 da 31 20 00    	jmpq   *0x2031da(%rip)        # 203f30 <__assert_fail@GLIBC_2.2.5>
 d56:	68 0a 00 00 00       	pushq  $0xa
 d5b:	e9 40 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d60 <memset@plt>:
 d60:	ff 25 d2 31 20 00    	jmpq   *0x2031d2(%rip)        # 203f38 <memset@GLIBC_2.2.5>
 d66:	68 0b 00 00 00       	pushq  $0xb
 d6b:	e9 30 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d70 <fgetc@plt>:
 d70:	ff 25 ca 31 20 00    	jmpq   *0x2031ca(%rip)        # 203f40 <fgetc@GLIBC_2.2.5>
 d76:	68 0c 00 00 00       	pushq  $0xc
 d7b:	e9 20 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d80 <srand@plt>:
 d80:	ff 25 c2 31 20 00    	jmpq   *0x2031c2(%rip)        # 203f48 <srand@GLIBC_2.2.5>
 d86:	68 0d 00 00 00       	pushq  $0xd
 d8b:	e9 10 ff ff ff       	jmpq   ca0 <.plt>

0000000000000d90 <fgets@plt>:
 d90:	ff 25 ba 31 20 00    	jmpq   *0x2031ba(%rip)        # 203f50 <fgets@GLIBC_2.2.5>
 d96:	68 0e 00 00 00       	pushq  $0xe
 d9b:	e9 00 ff ff ff       	jmpq   ca0 <.plt>

0000000000000da0 <strcmp@plt>:
 da0:	ff 25 b2 31 20 00    	jmpq   *0x2031b2(%rip)        # 203f58 <strcmp@GLIBC_2.2.5>
 da6:	68 0f 00 00 00       	pushq  $0xf
 dab:	e9 f0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000db0 <fprintf@plt>:
 db0:	ff 25 aa 31 20 00    	jmpq   *0x2031aa(%rip)        # 203f60 <fprintf@GLIBC_2.2.5>
 db6:	68 10 00 00 00       	pushq  $0x10
 dbb:	e9 e0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000dc0 <memcpy@plt>:
 dc0:	ff 25 a2 31 20 00    	jmpq   *0x2031a2(%rip)        # 203f68 <memcpy@GLIBC_2.14>
 dc6:	68 11 00 00 00       	pushq  $0x11
 dcb:	e9 d0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000dd0 <time@plt>:
 dd0:	ff 25 9a 31 20 00    	jmpq   *0x20319a(%rip)        # 203f70 <time@GLIBC_2.2.5>
 dd6:	68 12 00 00 00       	pushq  $0x12
 ddb:	e9 c0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000de0 <tolower@plt>:
 de0:	ff 25 92 31 20 00    	jmpq   *0x203192(%rip)        # 203f78 <tolower@GLIBC_2.2.5>
 de6:	68 13 00 00 00       	pushq  $0x13
 deb:	e9 b0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000df0 <malloc@plt>:
 df0:	ff 25 8a 31 20 00    	jmpq   *0x20318a(%rip)        # 203f80 <malloc@GLIBC_2.2.5>
 df6:	68 14 00 00 00       	pushq  $0x14
 dfb:	e9 a0 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e00 <fflush@plt>:
 e00:	ff 25 82 31 20 00    	jmpq   *0x203182(%rip)        # 203f88 <fflush@GLIBC_2.2.5>
 e06:	68 15 00 00 00       	pushq  $0x15
 e0b:	e9 90 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e10 <_IO_getc@plt>:
 e10:	ff 25 7a 31 20 00    	jmpq   *0x20317a(%rip)        # 203f90 <_IO_getc@GLIBC_2.2.5>
 e16:	68 16 00 00 00       	pushq  $0x16
 e1b:	e9 80 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e20 <ungetc@plt>:
 e20:	ff 25 72 31 20 00    	jmpq   *0x203172(%rip)        # 203f98 <ungetc@GLIBC_2.2.5>
 e26:	68 17 00 00 00       	pushq  $0x17
 e2b:	e9 70 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e30 <realloc@plt>:
 e30:	ff 25 6a 31 20 00    	jmpq   *0x20316a(%rip)        # 203fa0 <realloc@GLIBC_2.2.5>
 e36:	68 18 00 00 00       	pushq  $0x18
 e3b:	e9 60 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e40 <memmove@plt>:
 e40:	ff 25 62 31 20 00    	jmpq   *0x203162(%rip)        # 203fa8 <memmove@GLIBC_2.2.5>
 e46:	68 19 00 00 00       	pushq  $0x19
 e4b:	e9 50 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e50 <fopen@plt>:
 e50:	ff 25 5a 31 20 00    	jmpq   *0x20315a(%rip)        # 203fb0 <fopen@GLIBC_2.2.5>
 e56:	68 1a 00 00 00       	pushq  $0x1a
 e5b:	e9 40 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e60 <exit@plt>:
 e60:	ff 25 52 31 20 00    	jmpq   *0x203152(%rip)        # 203fb8 <exit@GLIBC_2.2.5>
 e66:	68 1b 00 00 00       	pushq  $0x1b
 e6b:	e9 30 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e70 <bsearch@plt>:
 e70:	ff 25 4a 31 20 00    	jmpq   *0x20314a(%rip)        # 203fc0 <bsearch@GLIBC_2.2.5>
 e76:	68 1c 00 00 00       	pushq  $0x1c
 e7b:	e9 20 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e80 <strdup@plt>:
 e80:	ff 25 42 31 20 00    	jmpq   *0x203142(%rip)        # 203fc8 <strdup@GLIBC_2.2.5>
 e86:	68 1d 00 00 00       	pushq  $0x1d
 e8b:	e9 10 fe ff ff       	jmpq   ca0 <.plt>

0000000000000e90 <rand@plt>:
 e90:	ff 25 3a 31 20 00    	jmpq   *0x20313a(%rip)        # 203fd0 <rand@GLIBC_2.2.5>
 e96:	68 1e 00 00 00       	pushq  $0x1e
 e9b:	e9 00 fe ff ff       	jmpq   ca0 <.plt>

Disassembly of section .plt.got:

0000000000000ea0 <__cxa_finalize@plt>:
 ea0:	ff 25 52 31 20 00    	jmpq   *0x203152(%rip)        # 203ff8 <__cxa_finalize@GLIBC_2.2.5>
 ea6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000eb0 <_start>:
     eb0:	31 ed                	xor    %ebp,%ebp
     eb2:	49 89 d1             	mov    %rdx,%r9
     eb5:	5e                   	pop    %rsi
     eb6:	48 89 e2             	mov    %rsp,%rdx
     eb9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     ebd:	50                   	push   %rax
     ebe:	54                   	push   %rsp
     ebf:	4c 8d 05 ca 16 00 00 	lea    0x16ca(%rip),%r8        # 2590 <__libc_csu_fini>
     ec6:	48 8d 0d 53 16 00 00 	lea    0x1653(%rip),%rcx        # 2520 <__libc_csu_init>
     ecd:	48 8d 3d 52 06 00 00 	lea    0x652(%rip),%rdi        # 1526 <main>
     ed4:	ff 15 06 31 20 00    	callq  *0x203106(%rip)        # 203fe0 <__libc_start_main@GLIBC_2.2.5>
     eda:	f4                   	hlt    
     edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000ee0 <deregister_tm_clones>:
     ee0:	48 8d 3d 29 31 20 00 	lea    0x203129(%rip),%rdi        # 204010 <__TMC_END__>
     ee7:	55                   	push   %rbp
     ee8:	48 8d 05 21 31 20 00 	lea    0x203121(%rip),%rax        # 204010 <__TMC_END__>
     eef:	48 39 f8             	cmp    %rdi,%rax
     ef2:	48 89 e5             	mov    %rsp,%rbp
     ef5:	74 19                	je     f10 <deregister_tm_clones+0x30>
     ef7:	48 8b 05 da 30 20 00 	mov    0x2030da(%rip),%rax        # 203fd8 <_ITM_deregisterTMCloneTable>
     efe:	48 85 c0             	test   %rax,%rax
     f01:	74 0d                	je     f10 <deregister_tm_clones+0x30>
     f03:	5d                   	pop    %rbp
     f04:	ff e0                	jmpq   *%rax
     f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f0d:	00 00 00 
     f10:	5d                   	pop    %rbp
     f11:	c3                   	retq   
     f12:	0f 1f 40 00          	nopl   0x0(%rax)
     f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f1d:	00 00 00 

0000000000000f20 <register_tm_clones>:
     f20:	48 8d 3d e9 30 20 00 	lea    0x2030e9(%rip),%rdi        # 204010 <__TMC_END__>
     f27:	48 8d 35 e2 30 20 00 	lea    0x2030e2(%rip),%rsi        # 204010 <__TMC_END__>
     f2e:	55                   	push   %rbp
     f2f:	48 29 fe             	sub    %rdi,%rsi
     f32:	48 89 e5             	mov    %rsp,%rbp
     f35:	48 c1 fe 03          	sar    $0x3,%rsi
     f39:	48 89 f0             	mov    %rsi,%rax
     f3c:	48 c1 e8 3f          	shr    $0x3f,%rax
     f40:	48 01 c6             	add    %rax,%rsi
     f43:	48 d1 fe             	sar    %rsi
     f46:	74 18                	je     f60 <register_tm_clones+0x40>
     f48:	48 8b 05 a1 30 20 00 	mov    0x2030a1(%rip),%rax        # 203ff0 <_ITM_registerTMCloneTable>
     f4f:	48 85 c0             	test   %rax,%rax
     f52:	74 0c                	je     f60 <register_tm_clones+0x40>
     f54:	5d                   	pop    %rbp
     f55:	ff e0                	jmpq   *%rax
     f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     f5e:	00 00 
     f60:	5d                   	pop    %rbp
     f61:	c3                   	retq   
     f62:	0f 1f 40 00          	nopl   0x0(%rax)
     f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f6d:	00 00 00 

0000000000000f70 <__do_global_dtors_aux>:
     f70:	80 3d d1 30 20 00 00 	cmpb   $0x0,0x2030d1(%rip)        # 204048 <completed.7696>
     f77:	75 2f                	jne    fa8 <__do_global_dtors_aux+0x38>
     f79:	48 83 3d 77 30 20 00 	cmpq   $0x0,0x203077(%rip)        # 203ff8 <__cxa_finalize@GLIBC_2.2.5>
     f80:	00 
     f81:	55                   	push   %rbp
     f82:	48 89 e5             	mov    %rsp,%rbp
     f85:	74 0c                	je     f93 <__do_global_dtors_aux+0x23>
     f87:	48 8b 3d 7a 30 20 00 	mov    0x20307a(%rip),%rdi        # 204008 <__dso_handle>
     f8e:	e8 0d ff ff ff       	callq  ea0 <__cxa_finalize@plt>
     f93:	e8 48 ff ff ff       	callq  ee0 <deregister_tm_clones>
     f98:	c6 05 a9 30 20 00 01 	movb   $0x1,0x2030a9(%rip)        # 204048 <completed.7696>
     f9f:	5d                   	pop    %rbp
     fa0:	c3                   	retq   
     fa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     fa8:	f3 c3                	repz retq 
     faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000fb0 <frame_dummy>:
     fb0:	55                   	push   %rbp
     fb1:	48 89 e5             	mov    %rsp,%rbp
     fb4:	5d                   	pop    %rbp
     fb5:	e9 66 ff ff ff       	jmpq   f20 <register_tm_clones>

0000000000000fba <StringHash>:
     fba:	55                   	push   %rbp
     fbb:	48 89 e5             	mov    %rsp,%rbp
     fbe:	53                   	push   %rbx
     fbf:	48 83 ec 38          	sub    $0x38,%rsp
     fc3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
     fc7:	89 75 c4             	mov    %esi,-0x3c(%rbp)
     fca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     fce:	48 8b 00             	mov    (%rax),%rax
     fd1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     fd5:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
     fdc:	00 
     fdd:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
     fe4:	eb 36                	jmp    101c <StringHash+0x62>
     fe6:	48 c7 c0 19 93 cf 9c 	mov    $0xffffffff9ccf9319,%rax
     fed:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
     ff2:	48 89 c3             	mov    %rax,%rbx
     ff5:	8b 45 dc             	mov    -0x24(%rbp),%eax
     ff8:	48 63 d0             	movslq %eax,%rdx
     ffb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     fff:	48 01 d0             	add    %rdx,%rax
    1002:	0f b6 00             	movzbl (%rax),%eax
    1005:	0f be c0             	movsbl %al,%eax
    1008:	89 c7                	mov    %eax,%edi
    100a:	e8 d1 fd ff ff       	callq  de0 <tolower@plt>
    100f:	48 98                	cltq   
    1011:	48 01 d8             	add    %rbx,%rax
    1014:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1018:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    101c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    101f:	48 63 d8             	movslq %eax,%rbx
    1022:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1026:	48 89 c7             	mov    %rax,%rdi
    1029:	e8 e2 fc ff ff       	callq  d10 <strlen@plt>
    102e:	48 39 c3             	cmp    %rax,%rbx
    1031:	72 b3                	jb     fe6 <StringHash+0x2c>
    1033:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1036:	48 63 c8             	movslq %eax,%rcx
    1039:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    103d:	ba 00 00 00 00       	mov    $0x0,%edx
    1042:	48 f7 f1             	div    %rcx
    1045:	48 89 d0             	mov    %rdx,%rax
    1048:	48 83 c4 38          	add    $0x38,%rsp
    104c:	5b                   	pop    %rbx
    104d:	5d                   	pop    %rbp
    104e:	c3                   	retq   

000000000000104f <StringCompare>:
    104f:	55                   	push   %rbp
    1050:	48 89 e5             	mov    %rsp,%rbp
    1053:	48 83 ec 10          	sub    $0x10,%rsp
    1057:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    105b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    105f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1063:	48 8b 10             	mov    (%rax),%rdx
    1066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    106a:	48 8b 00             	mov    (%rax),%rax
    106d:	48 89 d6             	mov    %rdx,%rsi
    1070:	48 89 c7             	mov    %rax,%rdi
    1073:	e8 28 fd ff ff       	callq  da0 <strcmp@plt>
    1078:	c9                   	leaveq 
    1079:	c3                   	retq   

000000000000107a <ThesEntryFree>:
    107a:	55                   	push   %rbp
    107b:	48 89 e5             	mov    %rsp,%rbp
    107e:	48 83 ec 20          	sub    $0x20,%rsp
    1082:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    108a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    108e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1092:	48 8b 00             	mov    (%rax),%rax
    1095:	48 89 c7             	mov    %rax,%rdi
    1098:	e8 23 fc ff ff       	callq  cc0 <free@plt>
    109d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10a1:	48 83 c0 08          	add    $0x8,%rax
    10a5:	48 89 c7             	mov    %rax,%rdi
    10a8:	e8 e3 05 00 00       	callq  1690 <VectorDispose>
    10ad:	90                   	nop
    10ae:	c9                   	leaveq 
    10af:	c3                   	retq   

00000000000010b0 <StringFree>:
    10b0:	55                   	push   %rbp
    10b1:	48 89 e5             	mov    %rsp,%rbp
    10b4:	48 83 ec 10          	sub    $0x10,%rsp
    10b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    10bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    10c0:	48 8b 00             	mov    (%rax),%rax
    10c3:	48 89 c7             	mov    %rax,%rdi
    10c6:	e8 f5 fb ff ff       	callq  cc0 <free@plt>
    10cb:	90                   	nop
    10cc:	c9                   	leaveq 
    10cd:	c3                   	retq   

00000000000010ce <TokenizeAndBuildThesaurus>:
    10ce:	55                   	push   %rbp
    10cf:	48 89 e5             	mov    %rsp,%rbp
    10d2:	48 81 ec 60 08 00 00 	sub    $0x860,%rsp
    10d9:	48 89 bd a8 f7 ff ff 	mov    %rdi,-0x858(%rbp)
    10e0:	48 89 b5 a0 f7 ff ff 	mov    %rsi,-0x860(%rbp)
    10e7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    10ee:	00 00 
    10f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    10f4:	31 c0                	xor    %eax,%eax
    10f6:	48 8d 3d b3 14 00 00 	lea    0x14b3(%rip),%rdi        # 25b0 <kHashMultiplier+0x8>
    10fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1102:	e8 39 fc ff ff       	callq  d40 <printf@plt>
    1107:	48 8b 05 12 2f 20 00 	mov    0x202f12(%rip),%rax        # 204020 <stdout@@GLIBC_2.2.5>
    110e:	48 89 c7             	mov    %rax,%rdi
    1111:	e8 ea fc ff ff       	callq  e00 <fflush@plt>
    1116:	e9 20 01 00 00       	jmpq   123b <TokenizeAndBuildThesaurus+0x16d>
    111b:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    1122:	48 89 c7             	mov    %rax,%rdi
    1125:	e8 56 fd ff ff       	callq  e80 <strdup@plt>
    112a:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
    1131:	48 8d 85 c0 f7 ff ff 	lea    -0x840(%rbp),%rax
    1138:	48 83 c0 08          	add    $0x8,%rax
    113c:	b9 04 00 00 00       	mov    $0x4,%ecx
    1141:	48 8d 15 68 ff ff ff 	lea    -0x98(%rip),%rdx        # 10b0 <StringFree>
    1148:	be 08 00 00 00       	mov    $0x8,%esi
    114d:	48 89 c7             	mov    %rax,%rdi
    1150:	e8 7b 04 00 00       	callq  15d0 <VectorNew>
    1155:	eb 51                	jmp    11a8 <TokenizeAndBuildThesaurus+0xda>
    1157:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
    115e:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
    1165:	ba 00 08 00 00       	mov    $0x800,%edx
    116a:	48 89 ce             	mov    %rcx,%rsi
    116d:	48 89 c7             	mov    %rax,%rdi
    1170:	e8 fd 10 00 00       	callq  2272 <STNextToken>
    1175:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    117c:	48 89 c7             	mov    %rax,%rdi
    117f:	e8 fc fc ff ff       	callq  e80 <strdup@plt>
    1184:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
    118b:	48 8d 85 b8 f7 ff ff 	lea    -0x848(%rbp),%rax
    1192:	48 8d 95 c0 f7 ff ff 	lea    -0x840(%rbp),%rdx
    1199:	48 83 c2 08          	add    $0x8,%rdx
    119d:	48 89 c6             	mov    %rax,%rsi
    11a0:	48 89 d7             	mov    %rdx,%rdi
    11a3:	e8 16 08 00 00       	callq  19be <VectorAppend>
    11a8:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
    11af:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
    11b6:	ba 00 08 00 00       	mov    $0x800,%edx
    11bb:	48 89 ce             	mov    %rcx,%rsi
    11be:	48 89 c7             	mov    %rax,%rdi
    11c1:	e8 ac 10 00 00       	callq  2272 <STNextToken>
    11c6:	85 c0                	test   %eax,%eax
    11c8:	74 0b                	je     11d5 <TokenizeAndBuildThesaurus+0x107>
    11ca:	0f b6 85 f0 f7 ff ff 	movzbl -0x810(%rbp),%eax
    11d1:	3c 2c                	cmp    $0x2c,%al
    11d3:	74 82                	je     1157 <TokenizeAndBuildThesaurus+0x89>
    11d5:	48 8d 95 c0 f7 ff ff 	lea    -0x840(%rbp),%rdx
    11dc:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
    11e3:	48 89 d6             	mov    %rdx,%rsi
    11e6:	48 89 c7             	mov    %rax,%rdi
    11e9:	e8 c0 0d 00 00       	callq  1fae <HashSetEnter>
    11ee:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
    11f5:	48 89 c7             	mov    %rax,%rdi
    11f8:	e8 22 0d 00 00       	callq  1f1f <HashSetCount>
    11fd:	89 c1                	mov    %eax,%ecx
    11ff:	ba d3 4d 62 10       	mov    $0x10624dd3,%edx
    1204:	89 c8                	mov    %ecx,%eax
    1206:	f7 ea                	imul   %edx
    1208:	c1 fa 06             	sar    $0x6,%edx
    120b:	89 c8                	mov    %ecx,%eax
    120d:	c1 f8 1f             	sar    $0x1f,%eax
    1210:	29 c2                	sub    %eax,%edx
    1212:	89 d0                	mov    %edx,%eax
    1214:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
    121a:	29 c1                	sub    %eax,%ecx
    121c:	89 c8                	mov    %ecx,%eax
    121e:	85 c0                	test   %eax,%eax
    1220:	75 19                	jne    123b <TokenizeAndBuildThesaurus+0x16d>
    1222:	bf 2e 00 00 00       	mov    $0x2e,%edi
    1227:	e8 a4 fa ff ff       	callq  cd0 <putchar@plt>
    122c:	48 8b 05 ed 2d 20 00 	mov    0x202ded(%rip),%rax        # 204020 <stdout@@GLIBC_2.2.5>
    1233:	48 89 c7             	mov    %rax,%rdi
    1236:	e8 c5 fb ff ff       	callq  e00 <fflush@plt>
    123b:	48 8d 8d f0 f7 ff ff 	lea    -0x810(%rbp),%rcx
    1242:	48 8b 85 a0 f7 ff ff 	mov    -0x860(%rbp),%rax
    1249:	ba 00 08 00 00       	mov    $0x800,%edx
    124e:	48 89 ce             	mov    %rcx,%rsi
    1251:	48 89 c7             	mov    %rax,%rdi
    1254:	e8 19 10 00 00       	callq  2272 <STNextToken>
    1259:	85 c0                	test   %eax,%eax
    125b:	0f 85 ba fe ff ff    	jne    111b <TokenizeAndBuildThesaurus+0x4d>
    1261:	48 8d 3d 68 13 00 00 	lea    0x1368(%rip),%rdi        # 25d0 <kHashMultiplier+0x28>
    1268:	e8 73 fa ff ff       	callq  ce0 <puts@plt>
    126d:	48 8b 05 ac 2d 20 00 	mov    0x202dac(%rip),%rax        # 204020 <stdout@@GLIBC_2.2.5>
    1274:	48 89 c7             	mov    %rax,%rdi
    1277:	e8 84 fb ff ff       	callq  e00 <fflush@plt>
    127c:	90                   	nop
    127d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1281:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1288:	00 00 
    128a:	74 05                	je     1291 <TokenizeAndBuildThesaurus+0x1c3>
    128c:	e8 8f fa ff ff       	callq  d20 <__stack_chk_fail@plt>
    1291:	c9                   	leaveq 
    1292:	c3                   	retq   

0000000000001293 <ReadThesaurus>:
    1293:	55                   	push   %rbp
    1294:	48 89 e5             	mov    %rsp,%rbp
    1297:	48 83 ec 40          	sub    $0x40,%rsp
    129b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    129f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    12a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    12aa:	00 00 
    12ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12b0:	31 c0                	xor    %eax,%eax
    12b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    12b6:	48 8d 35 20 13 00 00 	lea    0x1320(%rip),%rsi        # 25dd <kHashMultiplier+0x35>
    12bd:	48 89 c7             	mov    %rax,%rdi
    12c0:	e8 8b fb ff ff       	callq  e50 <fopen@plt>
    12c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    12c9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    12ce:	75 29                	jne    12f9 <ReadThesaurus+0x66>
    12d0:	48 8b 05 69 2d 20 00 	mov    0x202d69(%rip),%rax        # 204040 <stderr@@GLIBC_2.2.5>
    12d7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    12db:	48 8d 35 fe 12 00 00 	lea    0x12fe(%rip),%rsi        # 25e0 <kHashMultiplier+0x38>
    12e2:	48 89 c7             	mov    %rax,%rdi
    12e5:	b8 00 00 00 00       	mov    $0x0,%eax
    12ea:	e8 c1 fa ff ff       	callq  db0 <fprintf@plt>
    12ef:	bf 01 00 00 00       	mov    $0x1,%edi
    12f4:	e8 67 fb ff ff       	callq  e60 <exit@plt>
    12f9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    12fd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1301:	b9 00 00 00 00       	mov    $0x0,%ecx
    1306:	48 8d 15 fd 12 00 00 	lea    0x12fd(%rip),%rdx        # 260a <kHashMultiplier+0x62>
    130d:	48 89 c7             	mov    %rax,%rdi
    1310:	e8 82 0e 00 00       	callq  2197 <STNew>
    1315:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    1319:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    131d:	48 89 d6             	mov    %rdx,%rsi
    1320:	48 89 c7             	mov    %rax,%rdi
    1323:	e8 a6 fd ff ff       	callq  10ce <TokenizeAndBuildThesaurus>
    1328:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    132c:	48 89 c7             	mov    %rax,%rdi
    132f:	e8 1f 0f 00 00       	callq  2253 <STDispose>
    1334:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1338:	48 89 c7             	mov    %rax,%rdi
    133b:	e8 c0 f9 ff ff       	callq  d00 <fclose@plt>
    1340:	90                   	nop
    1341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1345:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    134c:	00 00 
    134e:	74 05                	je     1355 <ReadThesaurus+0xc2>
    1350:	e8 cb f9 ff ff       	callq  d20 <__stack_chk_fail@plt>
    1355:	c9                   	leaveq 
    1356:	c3                   	retq   

0000000000001357 <RandomInteger>:
    1357:	55                   	push   %rbp
    1358:	48 89 e5             	mov    %rsp,%rbp
    135b:	48 83 ec 20          	sub    $0x20,%rsp
    135f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1362:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1365:	8b 05 e1 2c 20 00    	mov    0x202ce1(%rip),%eax        # 20404c <randomized.3319>
    136b:	85 c0                	test   %eax,%eax
    136d:	75 1b                	jne    138a <RandomInteger+0x33>
    136f:	bf 00 00 00 00       	mov    $0x0,%edi
    1374:	e8 57 fa ff ff       	callq  dd0 <time@plt>
    1379:	89 c7                	mov    %eax,%edi
    137b:	e8 00 fa ff ff       	callq  d80 <srand@plt>
    1380:	c7 05 c2 2c 20 00 01 	movl   $0x1,0x202cc2(%rip)        # 20404c <randomized.3319>
    1387:	00 00 00 
    138a:	e8 01 fb ff ff       	callq  e90 <rand@plt>
    138f:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    1393:	f2 0f 10 0d 4d 13 00 	movsd  0x134d(%rip),%xmm1        # 26e8 <kApproximateWordCount+0x38>
    139a:	00 
    139b:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    139f:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    13a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    13a7:	2b 45 ec             	sub    -0x14(%rbp),%eax
    13aa:	83 c0 01             	add    $0x1,%eax
    13ad:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    13b1:	f2 0f 59 45 f8       	mulsd  -0x8(%rbp),%xmm0
    13b6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    13ba:	89 45 f4             	mov    %eax,-0xc(%rbp)
    13bd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13c0:	8b 45 f4             	mov    -0xc(%rbp),%eax
    13c3:	01 d0                	add    %edx,%eax
    13c5:	c9                   	leaveq 
    13c6:	c3                   	retq   

00000000000013c7 <QueryThesaurus>:
    13c7:	55                   	push   %rbp
    13c8:	48 89 e5             	mov    %rsp,%rbp
    13cb:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
    13d2:	48 89 bd c8 fb ff ff 	mov    %rdi,-0x438(%rbp)
    13d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13e0:	00 00 
    13e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13e6:	31 c0                	xor    %eax,%eax
    13e8:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    13ef:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
    13f6:	48 8d 3d 10 12 00 00 	lea    0x1210(%rip),%rdi        # 260d <kHashMultiplier+0x65>
    13fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1402:	e8 39 f9 ff ff       	callq  d40 <printf@plt>
    1407:	48 8b 15 22 2c 20 00 	mov    0x202c22(%rip),%rdx        # 204030 <stdin@@GLIBC_2.2.5>
    140e:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    1415:	be 00 04 00 00       	mov    $0x400,%esi
    141a:	48 89 c7             	mov    %rax,%rdi
    141d:	e8 6e f9 ff ff       	callq  d90 <fgets@plt>
    1422:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    1429:	48 89 c7             	mov    %rax,%rdi
    142c:	e8 df f8 ff ff       	callq  d10 <strlen@plt>
    1431:	48 83 e8 01          	sub    $0x1,%rax
    1435:	c6 84 05 f0 fb ff ff 	movb   $0x0,-0x410(%rbp,%rax,1)
    143c:	00 
    143d:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    1444:	0f b6 00             	movzbl (%rax),%eax
    1447:	84 c0                	test   %al,%al
    1449:	0f 84 c0 00 00 00    	je     150f <QueryThesaurus+0x148>
    144f:	48 8d 95 d8 fb ff ff 	lea    -0x428(%rbp),%rdx
    1456:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
    145d:	48 89 d6             	mov    %rdx,%rsi
    1460:	48 89 c7             	mov    %rax,%rdi
    1463:	e8 4d 0c 00 00       	callq  20b5 <HashSetLookup>
    1468:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
    146f:	48 83 bd e0 fb ff ff 	cmpq   $0x0,-0x420(%rbp)
    1476:	00 
    1477:	74 76                	je     14ef <QueryThesaurus+0x128>
    1479:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
    1480:	48 83 c0 08          	add    $0x8,%rax
    1484:	48 89 c7             	mov    %rax,%rdi
    1487:	e8 1d 03 00 00       	callq  17a9 <VectorLength>
    148c:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%rbp)
    1492:	8b 85 d4 fb ff ff    	mov    -0x42c(%rbp),%eax
    1498:	83 e8 01             	sub    $0x1,%eax
    149b:	89 c6                	mov    %eax,%esi
    149d:	bf 00 00 00 00       	mov    $0x0,%edi
    14a2:	e8 b0 fe ff ff       	callq  1357 <RandomInteger>
    14a7:	89 c2                	mov    %eax,%edx
    14a9:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
    14b0:	48 83 c0 08          	add    $0x8,%rax
    14b4:	89 d6                	mov    %edx,%esi
    14b6:	48 89 c7             	mov    %rax,%rdi
    14b9:	e8 fc 02 00 00       	callq  17ba <VectorNth>
    14be:	48 8b 00             	mov    (%rax),%rax
    14c1:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
    14c8:	48 8b 95 e8 fb ff ff 	mov    -0x418(%rbp),%rdx
    14cf:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    14d6:	48 89 c6             	mov    %rax,%rsi
    14d9:	48 8d 3d 50 11 00 00 	lea    0x1150(%rip),%rdi        # 2630 <kHashMultiplier+0x88>
    14e0:	b8 00 00 00 00       	mov    $0x0,%eax
    14e5:	e8 56 f8 ff ff       	callq  d40 <printf@plt>
    14ea:	e9 07 ff ff ff       	jmpq   13f6 <QueryThesaurus+0x2f>
    14ef:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    14f6:	48 89 c6             	mov    %rax,%rsi
    14f9:	48 8d 3d 78 11 00 00 	lea    0x1178(%rip),%rdi        # 2678 <kHashMultiplier+0xd0>
    1500:	b8 00 00 00 00       	mov    $0x0,%eax
    1505:	e8 36 f8 ff ff       	callq  d40 <printf@plt>
    150a:	e9 e7 fe ff ff       	jmpq   13f6 <QueryThesaurus+0x2f>
    150f:	90                   	nop
    1510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1514:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    151b:	00 00 
    151d:	74 05                	je     1524 <QueryThesaurus+0x15d>
    151f:	e8 fc f7 ff ff       	callq  d20 <__stack_chk_fail@plt>
    1524:	c9                   	leaveq 
    1525:	c3                   	retq   

0000000000001526 <main>:
    1526:	55                   	push   %rbp
    1527:	48 89 e5             	mov    %rsp,%rbp
    152a:	48 83 ec 50          	sub    $0x50,%rsp
    152e:	89 7d bc             	mov    %edi,-0x44(%rbp)
    1531:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    1535:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    153c:	00 00 
    153e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1542:	31 c0                	xor    %eax,%eax
    1544:	ba ff ff 07 00       	mov    $0x7ffff,%edx
    1549:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    154d:	4c 8d 0d 26 fb ff ff 	lea    -0x4da(%rip),%r9        # 107a <ThesEntryFree>
    1554:	4c 8d 05 f4 fa ff ff 	lea    -0x50c(%rip),%r8        # 104f <StringCompare>
    155b:	48 8d 0d 58 fa ff ff 	lea    -0x5a8(%rip),%rcx        # fba <StringHash>
    1562:	be 28 00 00 00       	mov    $0x28,%esi
    1567:	48 89 c7             	mov    %rax,%rdi
    156a:	e8 19 08 00 00       	callq  1d88 <HashSetNew>
    156f:	83 7d bc 01          	cmpl   $0x1,-0x44(%rbp)
    1573:	74 0a                	je     157f <main+0x59>
    1575:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1579:	48 8b 40 08          	mov    0x8(%rax),%rax
    157d:	eb 07                	jmp    1586 <main+0x60>
    157f:	48 8d 05 32 11 00 00 	lea    0x1132(%rip),%rax        # 26b8 <kApproximateWordCount+0x8>
    1586:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    158a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    158e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    1592:	48 89 d6             	mov    %rdx,%rsi
    1595:	48 89 c7             	mov    %rax,%rdi
    1598:	e8 f6 fc ff ff       	callq  1293 <ReadThesaurus>
    159d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    15a1:	48 89 c7             	mov    %rax,%rdi
    15a4:	e8 1e fe ff ff       	callq  13c7 <QueryThesaurus>
    15a9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    15ad:	48 89 c7             	mov    %rax,%rdi
    15b0:	e8 17 09 00 00       	callq  1ecc <HashSetDispose>
    15b5:	b8 00 00 00 00       	mov    $0x0,%eax
    15ba:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    15be:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    15c5:	00 00 
    15c7:	74 05                	je     15ce <main+0xa8>
    15c9:	e8 52 f7 ff ff       	callq  d20 <__stack_chk_fail@plt>
    15ce:	c9                   	leaveq 
    15cf:	c3                   	retq   

00000000000015d0 <VectorNew>:
    15d0:	55                   	push   %rbp
    15d1:	48 89 e5             	mov    %rsp,%rbp
    15d4:	48 83 ec 20          	sub    $0x20,%rsp
    15d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    15dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    15df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    15e3:	89 4d f0             	mov    %ecx,-0x10(%rbp)
    15e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    15ea:	7f 1f                	jg     160b <VectorNew+0x3b>
    15ec:	48 8d 0d 0d 12 00 00 	lea    0x120d(%rip),%rcx        # 2800 <__PRETTY_FUNCTION__.3071>
    15f3:	ba 0a 00 00 00       	mov    $0xa,%edx
    15f8:	48 8d 35 f1 10 00 00 	lea    0x10f1(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    15ff:	48 8d 3d f3 10 00 00 	lea    0x10f3(%rip),%rdi        # 26f9 <kApproximateWordCount+0x49>
    1606:	e8 45 f7 ff ff       	callq  d50 <__assert_fail@plt>
    160b:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    160f:	79 1f                	jns    1630 <VectorNew+0x60>
    1611:	48 8d 0d e8 11 00 00 	lea    0x11e8(%rip),%rcx        # 2800 <__PRETTY_FUNCTION__.3071>
    1618:	ba 0b 00 00 00       	mov    $0xb,%edx
    161d:	48 8d 35 cc 10 00 00 	lea    0x10cc(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1624:	48 8d 3d db 10 00 00 	lea    0x10db(%rip),%rdi        # 2706 <kApproximateWordCount+0x56>
    162b:	e8 20 f7 ff ff       	callq  d50 <__assert_fail@plt>
    1630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1634:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1637:	89 50 10             	mov    %edx,0x10(%rax)
    163a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    163e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1642:	48 89 50 18          	mov    %rdx,0x18(%rax)
    1646:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    164a:	74 05                	je     1651 <VectorNew+0x81>
    164c:	8b 45 f0             	mov    -0x10(%rbp),%eax
    164f:	eb 05                	jmp    1656 <VectorNew+0x86>
    1651:	b8 04 00 00 00       	mov    $0x4,%eax
    1656:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    165a:	89 42 08             	mov    %eax,0x8(%rdx)
    165d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1661:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    1668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    166c:	8b 50 08             	mov    0x8(%rax),%edx
    166f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1673:	8b 40 10             	mov    0x10(%rax),%eax
    1676:	0f af c2             	imul   %edx,%eax
    1679:	48 98                	cltq   
    167b:	48 89 c7             	mov    %rax,%rdi
    167e:	e8 6d f7 ff ff       	callq  df0 <malloc@plt>
    1683:	48 89 c2             	mov    %rax,%rdx
    1686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    168a:	48 89 10             	mov    %rdx,(%rax)
    168d:	90                   	nop
    168e:	c9                   	leaveq 
    168f:	c3                   	retq   

0000000000001690 <VectorDispose>:
    1690:	55                   	push   %rbp
    1691:	48 89 e5             	mov    %rsp,%rbp
    1694:	48 83 ec 20          	sub    $0x20,%rsp
    1698:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    169c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16a0:	48 8b 40 18          	mov    0x18(%rax),%rax
    16a4:	48 85 c0             	test   %rax,%rax
    16a7:	74 4b                	je     16f4 <VectorDispose+0x64>
    16a9:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    16b0:	00 
    16b1:	eb 32                	jmp    16e5 <VectorDispose+0x55>
    16b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16b7:	48 8b 10             	mov    (%rax),%rdx
    16ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16be:	8b 40 10             	mov    0x10(%rax),%eax
    16c1:	48 98                	cltq   
    16c3:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
    16c8:	48 01 d0             	add    %rdx,%rax
    16cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    16cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16d3:	48 8b 40 18          	mov    0x18(%rax),%rax
    16d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    16db:	48 89 d7             	mov    %rdx,%rdi
    16de:	ff d0                	callq  *%rax
    16e0:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    16e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16e9:	8b 40 0c             	mov    0xc(%rax),%eax
    16ec:	48 98                	cltq   
    16ee:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    16f2:	72 bf                	jb     16b3 <VectorDispose+0x23>
    16f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16f8:	48 8b 00             	mov    (%rax),%rax
    16fb:	48 89 c7             	mov    %rax,%rdi
    16fe:	e8 bd f5 ff ff       	callq  cc0 <free@plt>
    1703:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1707:	ba 20 00 00 00       	mov    $0x20,%edx
    170c:	be 00 00 00 00       	mov    $0x0,%esi
    1711:	48 89 c7             	mov    %rax,%rdi
    1714:	e8 47 f6 ff ff       	callq  d60 <memset@plt>
    1719:	90                   	nop
    171a:	c9                   	leaveq 
    171b:	c3                   	retq   

000000000000171c <privateVectorEnlarge>:
    171c:	55                   	push   %rbp
    171d:	48 89 e5             	mov    %rsp,%rbp
    1720:	48 83 ec 10          	sub    $0x10,%rsp
    1724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    172c:	8b 50 0c             	mov    0xc(%rax),%edx
    172f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1733:	8b 40 08             	mov    0x8(%rax),%eax
    1736:	39 c2                	cmp    %eax,%edx
    1738:	7c 6c                	jl     17a6 <privateVectorEnlarge+0x8a>
    173a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    173e:	8b 40 08             	mov    0x8(%rax),%eax
    1741:	8d 14 00             	lea    (%rax,%rax,1),%edx
    1744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1748:	89 50 08             	mov    %edx,0x8(%rax)
    174b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    174f:	8b 50 10             	mov    0x10(%rax),%edx
    1752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1756:	8b 40 08             	mov    0x8(%rax),%eax
    1759:	0f af c2             	imul   %edx,%eax
    175c:	48 63 d0             	movslq %eax,%rdx
    175f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1763:	48 8b 00             	mov    (%rax),%rax
    1766:	48 89 d6             	mov    %rdx,%rsi
    1769:	48 89 c7             	mov    %rax,%rdi
    176c:	e8 bf f6 ff ff       	callq  e30 <realloc@plt>
    1771:	48 89 c2             	mov    %rax,%rdx
    1774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1778:	48 89 10             	mov    %rdx,(%rax)
    177b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    177f:	48 8b 00             	mov    (%rax),%rax
    1782:	48 85 c0             	test   %rax,%rax
    1785:	75 20                	jne    17a7 <privateVectorEnlarge+0x8b>
    1787:	48 8d 0d 82 10 00 00 	lea    0x1082(%rip),%rcx        # 2810 <__PRETTY_FUNCTION__.3083>
    178e:	ba 25 00 00 00       	mov    $0x25,%edx
    1793:	48 8d 35 56 0f 00 00 	lea    0xf56(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    179a:	48 8d 3d 7c 0f 00 00 	lea    0xf7c(%rip),%rdi        # 271d <kApproximateWordCount+0x6d>
    17a1:	e8 aa f5 ff ff       	callq  d50 <__assert_fail@plt>
    17a6:	90                   	nop
    17a7:	c9                   	leaveq 
    17a8:	c3                   	retq   

00000000000017a9 <VectorLength>:
    17a9:	55                   	push   %rbp
    17aa:	48 89 e5             	mov    %rsp,%rbp
    17ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    17b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17b5:	8b 40 0c             	mov    0xc(%rax),%eax
    17b8:	5d                   	pop    %rbp
    17b9:	c3                   	retq   

00000000000017ba <VectorNth>:
    17ba:	55                   	push   %rbp
    17bb:	48 89 e5             	mov    %rsp,%rbp
    17be:	48 83 ec 10          	sub    $0x10,%rsp
    17c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    17c6:	89 75 f4             	mov    %esi,-0xc(%rbp)
    17c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    17cd:	78 0c                	js     17db <VectorNth+0x21>
    17cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17d3:	8b 40 0c             	mov    0xc(%rax),%eax
    17d6:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    17d9:	7c 1f                	jl     17fa <VectorNth+0x40>
    17db:	48 8d 0d 46 10 00 00 	lea    0x1046(%rip),%rcx        # 2828 <__PRETTY_FUNCTION__.3091>
    17e2:	ba 2d 00 00 00       	mov    $0x2d,%edx
    17e7:	48 8d 35 02 0f 00 00 	lea    0xf02(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    17ee:	48 8d 3d 3b 0f 00 00 	lea    0xf3b(%rip),%rdi        # 2730 <kApproximateWordCount+0x80>
    17f5:	e8 56 f5 ff ff       	callq  d50 <__assert_fail@plt>
    17fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17fe:	48 8b 10             	mov    (%rax),%rdx
    1801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1805:	8b 40 10             	mov    0x10(%rax),%eax
    1808:	0f af 45 f4          	imul   -0xc(%rbp),%eax
    180c:	48 98                	cltq   
    180e:	48 01 d0             	add    %rdx,%rax
    1811:	c9                   	leaveq 
    1812:	c3                   	retq   

0000000000001813 <VectorReplace>:
    1813:	55                   	push   %rbp
    1814:	48 89 e5             	mov    %rsp,%rbp
    1817:	48 83 ec 30          	sub    $0x30,%rsp
    181b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    181f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1823:	89 55 dc             	mov    %edx,-0x24(%rbp)
    1826:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    182a:	78 0c                	js     1838 <VectorReplace+0x25>
    182c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1830:	8b 40 0c             	mov    0xc(%rax),%eax
    1833:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    1836:	7c 1f                	jl     1857 <VectorReplace+0x44>
    1838:	48 8d 0d f9 0f 00 00 	lea    0xff9(%rip),%rcx        # 2838 <__PRETTY_FUNCTION__.3097>
    183f:	ba 33 00 00 00       	mov    $0x33,%edx
    1844:	48 8d 35 a5 0e 00 00 	lea    0xea5(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    184b:	48 8d 3d de 0e 00 00 	lea    0xede(%rip),%rdi        # 2730 <kApproximateWordCount+0x80>
    1852:	e8 f9 f4 ff ff       	callq  d50 <__assert_fail@plt>
    1857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    185b:	48 8b 10             	mov    (%rax),%rdx
    185e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1862:	8b 40 10             	mov    0x10(%rax),%eax
    1865:	0f af 45 dc          	imul   -0x24(%rbp),%eax
    1869:	48 98                	cltq   
    186b:	48 01 d0             	add    %rdx,%rax
    186e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1872:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1876:	48 8b 40 18          	mov    0x18(%rax),%rax
    187a:	48 85 c0             	test   %rax,%rax
    187d:	74 11                	je     1890 <VectorReplace+0x7d>
    187f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1883:	48 8b 40 18          	mov    0x18(%rax),%rax
    1887:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    188b:	48 89 d7             	mov    %rdx,%rdi
    188e:	ff d0                	callq  *%rax
    1890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1894:	8b 40 10             	mov    0x10(%rax),%eax
    1897:	48 63 d0             	movslq %eax,%rdx
    189a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    189e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18a2:	48 89 ce             	mov    %rcx,%rsi
    18a5:	48 89 c7             	mov    %rax,%rdi
    18a8:	e8 13 f5 ff ff       	callq  dc0 <memcpy@plt>
    18ad:	90                   	nop
    18ae:	c9                   	leaveq 
    18af:	c3                   	retq   

00000000000018b0 <VectorInsert>:
    18b0:	55                   	push   %rbp
    18b1:	48 89 e5             	mov    %rsp,%rbp
    18b4:	48 83 ec 40          	sub    $0x40,%rsp
    18b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    18bc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    18c0:	89 55 cc             	mov    %edx,-0x34(%rbp)
    18c3:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    18c7:	78 0c                	js     18d5 <VectorInsert+0x25>
    18c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18cd:	8b 40 0c             	mov    0xc(%rax),%eax
    18d0:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    18d3:	7e 1f                	jle    18f4 <VectorInsert+0x44>
    18d5:	48 8d 0d 6c 0f 00 00 	lea    0xf6c(%rip),%rcx        # 2848 <__PRETTY_FUNCTION__.3104>
    18dc:	ba 3d 00 00 00       	mov    $0x3d,%edx
    18e1:	48 8d 35 08 0e 00 00 	lea    0xe08(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    18e8:	48 8d 3d 71 0e 00 00 	lea    0xe71(%rip),%rdi        # 2760 <kApproximateWordCount+0xb0>
    18ef:	e8 5c f4 ff ff       	callq  d50 <__assert_fail@plt>
    18f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18f8:	48 89 c7             	mov    %rax,%rdi
    18fb:	e8 1c fe ff ff       	callq  171c <privateVectorEnlarge>
    1900:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1904:	48 8b 10             	mov    (%rax),%rdx
    1907:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    190b:	8b 40 10             	mov    0x10(%rax),%eax
    190e:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    1912:	48 98                	cltq   
    1914:	48 01 d0             	add    %rdx,%rax
    1917:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    191b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    191f:	8b 40 0c             	mov    0xc(%rax),%eax
    1922:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    1925:	75 1d                	jne    1944 <VectorInsert+0x94>
    1927:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    192b:	8b 40 10             	mov    0x10(%rax),%eax
    192e:	48 63 d0             	movslq %eax,%rdx
    1931:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    1935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1939:	48 89 ce             	mov    %rcx,%rsi
    193c:	48 89 c7             	mov    %rax,%rdi
    193f:	e8 7c f4 ff ff       	callq  dc0 <memcpy@plt>
    1944:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1948:	8b 40 10             	mov    0x10(%rax),%eax
    194b:	48 63 d0             	movslq %eax,%rdx
    194e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1952:	48 01 d0             	add    %rdx,%rax
    1955:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    195d:	8b 40 0c             	mov    0xc(%rax),%eax
    1960:	2b 45 cc             	sub    -0x34(%rbp),%eax
    1963:	48 98                	cltq   
    1965:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1969:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    196d:	8b 40 10             	mov    0x10(%rax),%eax
    1970:	48 98                	cltq   
    1972:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    1977:	48 89 c2             	mov    %rax,%rdx
    197a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    197e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1982:	48 89 ce             	mov    %rcx,%rsi
    1985:	48 89 c7             	mov    %rax,%rdi
    1988:	e8 b3 f4 ff ff       	callq  e40 <memmove@plt>
    198d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1991:	8b 40 10             	mov    0x10(%rax),%eax
    1994:	48 63 d0             	movslq %eax,%rdx
    1997:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    199b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    199f:	48 89 ce             	mov    %rcx,%rsi
    19a2:	48 89 c7             	mov    %rax,%rdi
    19a5:	e8 16 f4 ff ff       	callq  dc0 <memcpy@plt>
    19aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19ae:	8b 40 0c             	mov    0xc(%rax),%eax
    19b1:	8d 50 01             	lea    0x1(%rax),%edx
    19b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19b8:	89 50 0c             	mov    %edx,0xc(%rax)
    19bb:	90                   	nop
    19bc:	c9                   	leaveq 
    19bd:	c3                   	retq   

00000000000019be <VectorAppend>:
    19be:	55                   	push   %rbp
    19bf:	48 89 e5             	mov    %rsp,%rbp
    19c2:	48 83 ec 20          	sub    $0x20,%rsp
    19c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    19ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    19ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19d2:	48 89 c7             	mov    %rax,%rdi
    19d5:	e8 42 fd ff ff       	callq  171c <privateVectorEnlarge>
    19da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19de:	48 8b 10             	mov    (%rax),%rdx
    19e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19e5:	8b 48 0c             	mov    0xc(%rax),%ecx
    19e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19ec:	8b 40 10             	mov    0x10(%rax),%eax
    19ef:	0f af c1             	imul   %ecx,%eax
    19f2:	48 98                	cltq   
    19f4:	48 01 d0             	add    %rdx,%rax
    19f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    19fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19ff:	8b 40 10             	mov    0x10(%rax),%eax
    1a02:	48 63 d0             	movslq %eax,%rdx
    1a05:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a0d:	48 89 ce             	mov    %rcx,%rsi
    1a10:	48 89 c7             	mov    %rax,%rdi
    1a13:	e8 a8 f3 ff ff       	callq  dc0 <memcpy@plt>
    1a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a1c:	8b 40 0c             	mov    0xc(%rax),%eax
    1a1f:	8d 50 01             	lea    0x1(%rax),%edx
    1a22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a26:	89 50 0c             	mov    %edx,0xc(%rax)
    1a29:	90                   	nop
    1a2a:	c9                   	leaveq 
    1a2b:	c3                   	retq   

0000000000001a2c <VectorDelete>:
    1a2c:	55                   	push   %rbp
    1a2d:	48 89 e5             	mov    %rsp,%rbp
    1a30:	48 83 ec 30          	sub    $0x30,%rsp
    1a34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1a38:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    1a3b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1a3f:	78 0c                	js     1a4d <VectorDelete+0x21>
    1a41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a45:	8b 40 0c             	mov    0xc(%rax),%eax
    1a48:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    1a4b:	7c 1f                	jl     1a6c <VectorDelete+0x40>
    1a4d:	48 8d 0d 04 0e 00 00 	lea    0xe04(%rip),%rcx        # 2858 <__PRETTY_FUNCTION__.3117>
    1a54:	ba 56 00 00 00       	mov    $0x56,%edx
    1a59:	48 8d 35 90 0c 00 00 	lea    0xc90(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1a60:	48 8d 3d c9 0c 00 00 	lea    0xcc9(%rip),%rdi        # 2730 <kApproximateWordCount+0x80>
    1a67:	e8 e4 f2 ff ff       	callq  d50 <__assert_fail@plt>
    1a6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a70:	48 8b 10             	mov    (%rax),%rdx
    1a73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a77:	8b 40 10             	mov    0x10(%rax),%eax
    1a7a:	0f af 45 d4          	imul   -0x2c(%rbp),%eax
    1a7e:	48 98                	cltq   
    1a80:	48 01 d0             	add    %rdx,%rax
    1a83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1a87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a8b:	48 8b 40 18          	mov    0x18(%rax),%rax
    1a8f:	48 85 c0             	test   %rax,%rax
    1a92:	74 11                	je     1aa5 <VectorDelete+0x79>
    1a94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a98:	48 8b 40 18          	mov    0x18(%rax),%rax
    1a9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1aa0:	48 89 d7             	mov    %rdx,%rdi
    1aa3:	ff d0                	callq  *%rax
    1aa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1aa9:	8b 40 0c             	mov    0xc(%rax),%eax
    1aac:	83 e8 01             	sub    $0x1,%eax
    1aaf:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    1ab2:	74 4c                	je     1b00 <VectorDelete+0xd4>
    1ab4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ab8:	8b 40 10             	mov    0x10(%rax),%eax
    1abb:	48 63 d0             	movslq %eax,%rdx
    1abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ac2:	48 01 d0             	add    %rdx,%rax
    1ac5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1ac9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1acd:	8b 40 0c             	mov    0xc(%rax),%eax
    1ad0:	2b 45 d4             	sub    -0x2c(%rbp),%eax
    1ad3:	83 e8 01             	sub    $0x1,%eax
    1ad6:	48 98                	cltq   
    1ad8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1adc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ae0:	8b 40 10             	mov    0x10(%rax),%eax
    1ae3:	48 98                	cltq   
    1ae5:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    1aea:	48 89 c2             	mov    %rax,%rdx
    1aed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1af1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1af5:	48 89 ce             	mov    %rcx,%rsi
    1af8:	48 89 c7             	mov    %rax,%rdi
    1afb:	e8 c0 f2 ff ff       	callq  dc0 <memcpy@plt>
    1b00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b04:	8b 40 0c             	mov    0xc(%rax),%eax
    1b07:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b0e:	89 50 0c             	mov    %edx,0xc(%rax)
    1b11:	90                   	nop
    1b12:	c9                   	leaveq 
    1b13:	c3                   	retq   

0000000000001b14 <VectorSort>:
    1b14:	55                   	push   %rbp
    1b15:	48 89 e5             	mov    %rsp,%rbp
    1b18:	48 83 ec 10          	sub    $0x10,%rsp
    1b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1b20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1b24:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    1b29:	75 1f                	jne    1b4a <VectorSort+0x36>
    1b2b:	48 8d 0d 36 0d 00 00 	lea    0xd36(%rip),%rcx        # 2868 <__PRETTY_FUNCTION__.3125>
    1b32:	ba 64 00 00 00       	mov    $0x64,%edx
    1b37:	48 8d 35 b2 0b 00 00 	lea    0xbb2(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1b3e:	48 8d 3d 47 0c 00 00 	lea    0xc47(%rip),%rdi        # 278c <kApproximateWordCount+0xdc>
    1b45:	e8 06 f2 ff ff       	callq  d50 <__assert_fail@plt>
    1b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b4e:	8b 40 10             	mov    0x10(%rax),%eax
    1b51:	48 63 d0             	movslq %eax,%rdx
    1b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b58:	8b 40 0c             	mov    0xc(%rax),%eax
    1b5b:	48 63 f0             	movslq %eax,%rsi
    1b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b62:	48 8b 00             	mov    (%rax),%rax
    1b65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1b69:	48 89 c7             	mov    %rax,%rdi
    1b6c:	e8 7f f1 ff ff       	callq  cf0 <qsort@plt>
    1b71:	90                   	nop
    1b72:	c9                   	leaveq 
    1b73:	c3                   	retq   

0000000000001b74 <VectorMap>:
    1b74:	55                   	push   %rbp
    1b75:	48 89 e5             	mov    %rsp,%rbp
    1b78:	48 83 ec 30          	sub    $0x30,%rsp
    1b7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1b80:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1b84:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1b88:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1b8d:	75 1f                	jne    1bae <VectorMap+0x3a>
    1b8f:	48 8d 0d e2 0c 00 00 	lea    0xce2(%rip),%rcx        # 2878 <__PRETTY_FUNCTION__.3131>
    1b96:	ba 6a 00 00 00       	mov    $0x6a,%edx
    1b9b:	48 8d 35 4e 0b 00 00 	lea    0xb4e(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1ba2:	48 8d 3d f3 0b 00 00 	lea    0xbf3(%rip),%rdi        # 279c <kApproximateWordCount+0xec>
    1ba9:	e8 a2 f1 ff ff       	callq  d50 <__assert_fail@plt>
    1bae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1bb5:	eb 33                	jmp    1bea <VectorMap+0x76>
    1bb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1bbb:	48 8b 10             	mov    (%rax),%rdx
    1bbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1bc2:	8b 40 10             	mov    0x10(%rax),%eax
    1bc5:	0f af 45 f4          	imul   -0xc(%rbp),%eax
    1bc9:	48 98                	cltq   
    1bcb:	48 01 d0             	add    %rdx,%rax
    1bce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1bd2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1bd6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1bda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1bde:	48 89 ce             	mov    %rcx,%rsi
    1be1:	48 89 d7             	mov    %rdx,%rdi
    1be4:	ff d0                	callq  *%rax
    1be6:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1bee:	8b 40 0c             	mov    0xc(%rax),%eax
    1bf1:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    1bf4:	7c c1                	jl     1bb7 <VectorMap+0x43>
    1bf6:	90                   	nop
    1bf7:	c9                   	leaveq 
    1bf8:	c3                   	retq   

0000000000001bf9 <VectorSearch>:
    1bf9:	55                   	push   %rbp
    1bfa:	48 89 e5             	mov    %rsp,%rbp
    1bfd:	48 83 ec 50          	sub    $0x50,%rsp
    1c01:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    1c05:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    1c09:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    1c0d:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    1c10:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    1c14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1c1b:	00 00 
    1c1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1c21:	31 c0                	xor    %eax,%eax
    1c23:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    1c28:	75 1f                	jne    1c49 <VectorSearch+0x50>
    1c2a:	48 8d 0d 57 0c 00 00 	lea    0xc57(%rip),%rcx        # 2888 <__PRETTY_FUNCTION__.3145>
    1c31:	ba 74 00 00 00       	mov    $0x74,%edx
    1c36:	48 8d 35 b3 0a 00 00 	lea    0xab3(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1c3d:	48 8d 3d 6c 0b 00 00 	lea    0xb6c(%rip),%rdi        # 27b0 <kNotFound+0x4>
    1c44:	e8 07 f1 ff ff       	callq  d50 <__assert_fail@plt>
    1c49:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    1c4e:	75 1f                	jne    1c6f <VectorSearch+0x76>
    1c50:	48 8d 0d 31 0c 00 00 	lea    0xc31(%rip),%rcx        # 2888 <__PRETTY_FUNCTION__.3145>
    1c57:	ba 75 00 00 00       	mov    $0x75,%edx
    1c5c:	48 8d 35 8d 0a 00 00 	lea    0xa8d(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1c63:	48 8d 3d 57 0b 00 00 	lea    0xb57(%rip),%rdi        # 27c1 <kNotFound+0x15>
    1c6a:	e8 e1 f0 ff ff       	callq  d50 <__assert_fail@plt>
    1c6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1c73:	8b 40 0c             	mov    0xc(%rax),%eax
    1c76:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    1c79:	7c 0a                	jl     1c85 <VectorSearch+0x8c>
    1c7b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1c80:	e9 ed 00 00 00       	jmpq   1d72 <VectorSearch+0x179>
    1c85:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
    1c89:	78 0c                	js     1c97 <VectorSearch+0x9e>
    1c8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1c8f:	8b 40 0c             	mov    0xc(%rax),%eax
    1c92:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    1c95:	7c 1f                	jl     1cb6 <VectorSearch+0xbd>
    1c97:	48 8d 0d ea 0b 00 00 	lea    0xbea(%rip),%rcx        # 2888 <__PRETTY_FUNCTION__.3145>
    1c9e:	ba 77 00 00 00       	mov    $0x77,%edx
    1ca3:	48 8d 35 46 0a 00 00 	lea    0xa46(%rip),%rsi        # 26f0 <kApproximateWordCount+0x40>
    1caa:	48 8d 3d 1f 0b 00 00 	lea    0xb1f(%rip),%rdi        # 27d0 <kNotFound+0x24>
    1cb1:	e8 9a f0 ff ff       	callq  d50 <__assert_fail@plt>
    1cb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1cba:	48 8b 10             	mov    (%rax),%rdx
    1cbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1cc1:	8b 40 10             	mov    0x10(%rax),%eax
    1cc4:	0f af 45 b4          	imul   -0x4c(%rbp),%eax
    1cc8:	48 98                	cltq   
    1cca:	48 01 d0             	add    %rdx,%rax
    1ccd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1cd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1cd5:	8b 40 0c             	mov    0xc(%rax),%eax
    1cd8:	2b 45 b4             	sub    -0x4c(%rbp),%eax
    1cdb:	48 98                	cltq   
    1cdd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1ce1:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
    1ce5:	74 2b                	je     1d12 <VectorSearch+0x119>
    1ce7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1ceb:	8b 40 10             	mov    0x10(%rax),%eax
    1cee:	48 63 c8             	movslq %eax,%rcx
    1cf1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1cf5:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    1cf9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1cfd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1d01:	49 89 f8             	mov    %rdi,%r8
    1d04:	48 89 c7             	mov    %rax,%rdi
    1d07:	e8 64 f1 ff ff       	callq  e70 <bsearch@plt>
    1d0c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1d10:	eb 29                	jmp    1d3b <VectorSearch+0x142>
    1d12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1d16:	8b 40 10             	mov    0x10(%rax),%eax
    1d19:	48 63 c8             	movslq %eax,%rcx
    1d1c:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    1d20:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    1d24:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1d28:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1d2c:	49 89 f8             	mov    %rdi,%r8
    1d2f:	48 89 c7             	mov    %rax,%rdi
    1d32:	e8 79 ef ff ff       	callq  cb0 <lfind@plt>
    1d37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1d3b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1d40:	75 07                	jne    1d49 <VectorSearch+0x150>
    1d42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1d47:	eb 29                	jmp    1d72 <VectorSearch+0x179>
    1d49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1d4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1d51:	48 8b 00             	mov    (%rax),%rax
    1d54:	48 89 d1             	mov    %rdx,%rcx
    1d57:	48 29 c1             	sub    %rax,%rcx
    1d5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1d5e:	8b 40 10             	mov    0x10(%rax),%eax
    1d61:	48 63 f8             	movslq %eax,%rdi
    1d64:	48 89 c8             	mov    %rcx,%rax
    1d67:	48 99                	cqto   
    1d69:	48 f7 ff             	idiv   %rdi
    1d6c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1d6f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d72:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    1d76:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    1d7d:	00 00 
    1d7f:	74 05                	je     1d86 <VectorSearch+0x18d>
    1d81:	e8 9a ef ff ff       	callq  d20 <__stack_chk_fail@plt>
    1d86:	c9                   	leaveq 
    1d87:	c3                   	retq   

0000000000001d88 <HashSetNew>:
    1d88:	55                   	push   %rbp
    1d89:	48 89 e5             	mov    %rsp,%rbp
    1d8c:	48 83 ec 40          	sub    $0x40,%rsp
    1d90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1d94:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1d97:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1d9a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    1d9e:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
    1da2:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    1da6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    1daa:	7f 1f                	jg     1dcb <HashSetNew+0x43>
    1dac:	48 8d 0d 85 0b 00 00 	lea    0xb85(%rip),%rcx        # 2938 <__PRETTY_FUNCTION__.2656>
    1db3:	ba 0a 00 00 00       	mov    $0xa,%edx
    1db8:	48 8d 35 d9 0a 00 00 	lea    0xad9(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1dbf:	48 8d 3d dc 0a 00 00 	lea    0xadc(%rip),%rdi        # 28a2 <__PRETTY_FUNCTION__.3145+0x1a>
    1dc6:	e8 85 ef ff ff       	callq  d50 <__assert_fail@plt>
    1dcb:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    1dcf:	7f 1f                	jg     1df0 <HashSetNew+0x68>
    1dd1:	48 8d 0d 60 0b 00 00 	lea    0xb60(%rip),%rcx        # 2938 <__PRETTY_FUNCTION__.2656>
    1dd8:	ba 0b 00 00 00       	mov    $0xb,%edx
    1ddd:	48 8d 35 b4 0a 00 00 	lea    0xab4(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1de4:	48 8d 3d c4 0a 00 00 	lea    0xac4(%rip),%rdi        # 28af <__PRETTY_FUNCTION__.3145+0x27>
    1deb:	e8 60 ef ff ff       	callq  d50 <__assert_fail@plt>
    1df0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    1df5:	75 1f                	jne    1e16 <HashSetNew+0x8e>
    1df7:	48 8d 0d 3a 0b 00 00 	lea    0xb3a(%rip),%rcx        # 2938 <__PRETTY_FUNCTION__.2656>
    1dfe:	ba 0c 00 00 00       	mov    $0xc,%edx
    1e03:	48 8d 35 8e 0a 00 00 	lea    0xa8e(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1e0a:	48 8d 3d ad 0a 00 00 	lea    0xaad(%rip),%rdi        # 28be <__PRETTY_FUNCTION__.3145+0x36>
    1e11:	e8 3a ef ff ff       	callq  d50 <__assert_fail@plt>
    1e16:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    1e1b:	75 1f                	jne    1e3c <HashSetNew+0xb4>
    1e1d:	48 8d 0d 14 0b 00 00 	lea    0xb14(%rip),%rcx        # 2938 <__PRETTY_FUNCTION__.2656>
    1e24:	ba 0d 00 00 00       	mov    $0xd,%edx
    1e29:	48 8d 35 68 0a 00 00 	lea    0xa68(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1e30:	48 8d 3d 96 0a 00 00 	lea    0xa96(%rip),%rdi        # 28cd <__PRETTY_FUNCTION__.3145+0x45>
    1e37:	e8 14 ef ff ff       	callq  d50 <__assert_fail@plt>
    1e3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e40:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1e43:	89 50 08             	mov    %edx,0x8(%rax)
    1e46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e4a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    1e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1e59:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1e5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e61:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1e65:	48 89 50 18          	mov    %rdx,0x18(%rax)
    1e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e6d:	8b 40 08             	mov    0x8(%rax),%eax
    1e70:	48 98                	cltq   
    1e72:	48 c1 e0 05          	shl    $0x5,%rax
    1e76:	48 89 c7             	mov    %rax,%rdi
    1e79:	e8 72 ef ff ff       	callq  df0 <malloc@plt>
    1e7e:	48 89 c2             	mov    %rax,%rdx
    1e81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e85:	48 89 10             	mov    %rdx,(%rax)
    1e88:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e8f:	eb 2c                	jmp    1ebd <HashSetNew+0x135>
    1e91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e95:	48 8b 00             	mov    (%rax),%rax
    1e98:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1e9b:	48 63 d2             	movslq %edx,%rdx
    1e9e:	48 c1 e2 05          	shl    $0x5,%rdx
    1ea2:	48 8d 3c 10          	lea    (%rax,%rdx,1),%rdi
    1ea6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1eaa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1ead:	b9 00 00 00 00       	mov    $0x0,%ecx
    1eb2:	89 c6                	mov    %eax,%esi
    1eb4:	e8 17 f7 ff ff       	callq  15d0 <VectorNew>
    1eb9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1ebd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ec1:	8b 40 08             	mov    0x8(%rax),%eax
    1ec4:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ec7:	7c c8                	jl     1e91 <HashSetNew+0x109>
    1ec9:	90                   	nop
    1eca:	c9                   	leaveq 
    1ecb:	c3                   	retq   

0000000000001ecc <HashSetDispose>:
    1ecc:	55                   	push   %rbp
    1ecd:	48 89 e5             	mov    %rsp,%rbp
    1ed0:	48 83 ec 20          	sub    $0x20,%rsp
    1ed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1ed8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1edf:	eb 20                	jmp    1f01 <HashSetDispose+0x35>
    1ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ee5:	48 8b 00             	mov    (%rax),%rax
    1ee8:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1eeb:	48 63 d2             	movslq %edx,%rdx
    1eee:	48 c1 e2 05          	shl    $0x5,%rdx
    1ef2:	48 01 d0             	add    %rdx,%rax
    1ef5:	48 89 c7             	mov    %rax,%rdi
    1ef8:	e8 93 f7 ff ff       	callq  1690 <VectorDispose>
    1efd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f05:	8b 40 08             	mov    0x8(%rax),%eax
    1f08:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1f0b:	7c d4                	jl     1ee1 <HashSetDispose+0x15>
    1f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f11:	48 8b 00             	mov    (%rax),%rax
    1f14:	48 89 c7             	mov    %rax,%rdi
    1f17:	e8 a4 ed ff ff       	callq  cc0 <free@plt>
    1f1c:	90                   	nop
    1f1d:	c9                   	leaveq 
    1f1e:	c3                   	retq   

0000000000001f1f <HashSetCount>:
    1f1f:	55                   	push   %rbp
    1f20:	48 89 e5             	mov    %rsp,%rbp
    1f23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1f2b:	8b 40 0c             	mov    0xc(%rax),%eax
    1f2e:	5d                   	pop    %rbp
    1f2f:	c3                   	retq   

0000000000001f30 <HashSetMap>:
    1f30:	55                   	push   %rbp
    1f31:	48 89 e5             	mov    %rsp,%rbp
    1f34:	48 83 ec 30          	sub    $0x30,%rsp
    1f38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1f3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1f40:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1f44:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1f49:	75 1f                	jne    1f6a <HashSetMap+0x3a>
    1f4b:	48 8d 0d f6 09 00 00 	lea    0x9f6(%rip),%rcx        # 2948 <__PRETTY_FUNCTION__.2676>
    1f52:	ba 29 00 00 00       	mov    $0x29,%edx
    1f57:	48 8d 35 3a 09 00 00 	lea    0x93a(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1f5e:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 28df <__PRETTY_FUNCTION__.3145+0x57>
    1f65:	e8 e6 ed ff ff       	callq  d50 <__assert_fail@plt>
    1f6a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1f71:	eb 2c                	jmp    1f9f <HashSetMap+0x6f>
    1f73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f77:	48 8b 00             	mov    (%rax),%rax
    1f7a:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1f7d:	48 63 d2             	movslq %edx,%rdx
    1f80:	48 c1 e2 05          	shl    $0x5,%rdx
    1f84:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    1f88:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1f8c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1f90:	48 89 c6             	mov    %rax,%rsi
    1f93:	48 89 cf             	mov    %rcx,%rdi
    1f96:	e8 d9 fb ff ff       	callq  1b74 <VectorMap>
    1f9b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1fa3:	8b 40 08             	mov    0x8(%rax),%eax
    1fa6:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1fa9:	7c c8                	jl     1f73 <HashSetMap+0x43>
    1fab:	90                   	nop
    1fac:	c9                   	leaveq 
    1fad:	c3                   	retq   

0000000000001fae <HashSetEnter>:
    1fae:	55                   	push   %rbp
    1faf:	48 89 e5             	mov    %rsp,%rbp
    1fb2:	48 83 ec 20          	sub    $0x20,%rsp
    1fb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1fba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1fbe:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1fc3:	75 1f                	jne    1fe4 <HashSetEnter+0x36>
    1fc5:	48 8d 0d 8c 09 00 00 	lea    0x98c(%rip),%rcx        # 2958 <__PRETTY_FUNCTION__.2685>
    1fcc:	ba 31 00 00 00       	mov    $0x31,%edx
    1fd1:	48 8d 35 c0 08 00 00 	lea    0x8c0(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    1fd8:	48 8d 3d 0e 09 00 00 	lea    0x90e(%rip),%rdi        # 28ed <__PRETTY_FUNCTION__.3145+0x65>
    1fdf:	e8 6c ed ff ff       	callq  d50 <__assert_fail@plt>
    1fe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1fe8:	48 8b 40 10          	mov    0x10(%rax),%rax
    1fec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1ff0:	8b 4a 08             	mov    0x8(%rdx),%ecx
    1ff3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1ff7:	89 ce                	mov    %ecx,%esi
    1ff9:	48 89 d7             	mov    %rdx,%rdi
    1ffc:	ff d0                	callq  *%rax
    1ffe:	89 45 f0             	mov    %eax,-0x10(%rbp)
    2001:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    2005:	78 0c                	js     2013 <HashSetEnter+0x65>
    2007:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    200b:	8b 40 08             	mov    0x8(%rax),%eax
    200e:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    2011:	7c 1f                	jl     2032 <HashSetEnter+0x84>
    2013:	48 8d 0d 3e 09 00 00 	lea    0x93e(%rip),%rcx        # 2958 <__PRETTY_FUNCTION__.2685>
    201a:	ba 33 00 00 00       	mov    $0x33,%edx
    201f:	48 8d 35 72 08 00 00 	lea    0x872(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    2026:	48 8d 3d d3 08 00 00 	lea    0x8d3(%rip),%rdi        # 2900 <__PRETTY_FUNCTION__.3145+0x78>
    202d:	e8 1e ed ff ff       	callq  d50 <__assert_fail@plt>
    2032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2036:	48 8b 00             	mov    (%rax),%rax
    2039:	8b 55 f0             	mov    -0x10(%rbp),%edx
    203c:	48 63 d2             	movslq %edx,%rdx
    203f:	48 c1 e2 05          	shl    $0x5,%rdx
    2043:	48 01 d0             	add    %rdx,%rax
    2046:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    204a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    204e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    2052:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    2056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    205a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2060:	b9 00 00 00 00       	mov    $0x0,%ecx
    2065:	48 89 c7             	mov    %rax,%rdi
    2068:	e8 8c fb ff ff       	callq  1bf9 <VectorSearch>
    206d:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2070:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
    2074:	74 18                	je     208e <HashSetEnter+0xe0>
    2076:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2079:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    207d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2081:	48 89 ce             	mov    %rcx,%rsi
    2084:	48 89 c7             	mov    %rax,%rdi
    2087:	e8 87 f7 ff ff       	callq  1813 <VectorReplace>
    208c:	eb 24                	jmp    20b2 <HashSetEnter+0x104>
    208e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2096:	48 89 d6             	mov    %rdx,%rsi
    2099:	48 89 c7             	mov    %rax,%rdi
    209c:	e8 1d f9 ff ff       	callq  19be <VectorAppend>
    20a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20a5:	8b 40 0c             	mov    0xc(%rax),%eax
    20a8:	8d 50 01             	lea    0x1(%rax),%edx
    20ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20af:	89 50 0c             	mov    %edx,0xc(%rax)
    20b2:	90                   	nop
    20b3:	c9                   	leaveq 
    20b4:	c3                   	retq   

00000000000020b5 <HashSetLookup>:
    20b5:	55                   	push   %rbp
    20b6:	48 89 e5             	mov    %rsp,%rbp
    20b9:	48 83 ec 20          	sub    $0x20,%rsp
    20bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    20c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    20c5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    20ca:	75 1f                	jne    20eb <HashSetLookup+0x36>
    20cc:	48 8d 0d 95 08 00 00 	lea    0x895(%rip),%rcx        # 2968 <__PRETTY_FUNCTION__.2693>
    20d3:	ba 43 00 00 00       	mov    $0x43,%edx
    20d8:	48 8d 35 b9 07 00 00 	lea    0x7b9(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    20df:	48 8d 3d 07 08 00 00 	lea    0x807(%rip),%rdi        # 28ed <__PRETTY_FUNCTION__.3145+0x65>
    20e6:	e8 65 ec ff ff       	callq  d50 <__assert_fail@plt>
    20eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20ef:	48 8b 40 10          	mov    0x10(%rax),%rax
    20f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    20f7:	8b 4a 08             	mov    0x8(%rdx),%ecx
    20fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    20fe:	89 ce                	mov    %ecx,%esi
    2100:	48 89 d7             	mov    %rdx,%rdi
    2103:	ff d0                	callq  *%rax
    2105:	89 45 f0             	mov    %eax,-0x10(%rbp)
    2108:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    210c:	78 0c                	js     211a <HashSetLookup+0x65>
    210e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2112:	8b 40 08             	mov    0x8(%rax),%eax
    2115:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    2118:	7c 1f                	jl     2139 <HashSetLookup+0x84>
    211a:	48 8d 0d 47 08 00 00 	lea    0x847(%rip),%rcx        # 2968 <__PRETTY_FUNCTION__.2693>
    2121:	ba 45 00 00 00       	mov    $0x45,%edx
    2126:	48 8d 35 6b 07 00 00 	lea    0x76b(%rip),%rsi        # 2898 <__PRETTY_FUNCTION__.3145+0x10>
    212d:	48 8d 3d cc 07 00 00 	lea    0x7cc(%rip),%rdi        # 2900 <__PRETTY_FUNCTION__.3145+0x78>
    2134:	e8 17 ec ff ff       	callq  d50 <__assert_fail@plt>
    2139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    213d:	48 8b 00             	mov    (%rax),%rax
    2140:	8b 55 f0             	mov    -0x10(%rbp),%edx
    2143:	48 63 d2             	movslq %edx,%rdx
    2146:	48 c1 e2 05          	shl    $0x5,%rdx
    214a:	48 01 d0             	add    %rdx,%rax
    214d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2151:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2155:	48 8b 50 18          	mov    0x18(%rax),%rdx
    2159:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    215d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2161:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2167:	b9 00 00 00 00       	mov    $0x0,%ecx
    216c:	48 89 c7             	mov    %rax,%rdi
    216f:	e8 85 fa ff ff       	callq  1bf9 <VectorSearch>
    2174:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2177:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
    217b:	74 13                	je     2190 <HashSetLookup+0xdb>
    217d:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2184:	89 d6                	mov    %edx,%esi
    2186:	48 89 c7             	mov    %rax,%rdi
    2189:	e8 2c f6 ff ff       	callq  17ba <VectorNth>
    218e:	eb 05                	jmp    2195 <HashSetLookup+0xe0>
    2190:	b8 00 00 00 00       	mov    $0x0,%eax
    2195:	c9                   	leaveq 
    2196:	c3                   	retq   

0000000000002197 <STNew>:
    2197:	55                   	push   %rbp
    2198:	48 89 e5             	mov    %rsp,%rbp
    219b:	48 83 ec 20          	sub    $0x20,%rsp
    219f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    21a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    21a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    21ab:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    21ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    21b3:	75 1f                	jne    21d4 <STNew+0x3d>
    21b5:	48 8d 0d 30 08 00 00 	lea    0x830(%rip),%rcx        # 29ec <__PRETTY_FUNCTION__.3089>
    21bc:	ba 0a 00 00 00       	mov    $0xa,%edx
    21c1:	48 8d 35 b8 07 00 00 	lea    0x7b8(%rip),%rsi        # 2980 <__PRETTY_FUNCTION__.2693+0x18>
    21c8:	48 8d 3d c3 07 00 00 	lea    0x7c3(%rip),%rdi        # 2992 <__PRETTY_FUNCTION__.2693+0x2a>
    21cf:	e8 7c eb ff ff       	callq  d50 <__assert_fail@plt>
    21d4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    21d9:	75 1f                	jne    21fa <STNew+0x63>
    21db:	48 8d 0d 0a 08 00 00 	lea    0x80a(%rip),%rcx        # 29ec <__PRETTY_FUNCTION__.3089>
    21e2:	ba 0b 00 00 00       	mov    $0xb,%edx
    21e7:	48 8d 35 92 07 00 00 	lea    0x792(%rip),%rsi        # 2980 <__PRETTY_FUNCTION__.2693+0x18>
    21ee:	48 8d 3d ac 07 00 00 	lea    0x7ac(%rip),%rdi        # 29a1 <__PRETTY_FUNCTION__.2693+0x39>
    21f5:	e8 56 eb ff ff       	callq  d50 <__assert_fail@plt>
    21fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21fe:	0f b6 00             	movzbl (%rax),%eax
    2201:	84 c0                	test   %al,%al
    2203:	75 1f                	jne    2224 <STNew+0x8d>
    2205:	48 8d 0d e0 07 00 00 	lea    0x7e0(%rip),%rcx        # 29ec <__PRETTY_FUNCTION__.3089>
    220c:	ba 0c 00 00 00       	mov    $0xc,%edx
    2211:	48 8d 35 68 07 00 00 	lea    0x768(%rip),%rsi        # 2980 <__PRETTY_FUNCTION__.2693+0x18>
    2218:	48 8d 3d 95 07 00 00 	lea    0x795(%rip),%rdi        # 29b4 <__PRETTY_FUNCTION__.2693+0x4c>
    221f:	e8 2c eb ff ff       	callq  d50 <__assert_fail@plt>
    2224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2228:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    222c:	48 89 10             	mov    %rdx,(%rax)
    222f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2233:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    2236:	89 50 10             	mov    %edx,0x10(%rax)
    2239:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    223d:	48 89 c7             	mov    %rax,%rdi
    2240:	e8 3b ec ff ff       	callq  e80 <strdup@plt>
    2245:	48 89 c2             	mov    %rax,%rdx
    2248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    224c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2250:	90                   	nop
    2251:	c9                   	leaveq 
    2252:	c3                   	retq   

0000000000002253 <STDispose>:
    2253:	55                   	push   %rbp
    2254:	48 89 e5             	mov    %rsp,%rbp
    2257:	48 83 ec 10          	sub    $0x10,%rsp
    225b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    225f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2263:	48 8b 40 08          	mov    0x8(%rax),%rax
    2267:	48 89 c7             	mov    %rax,%rdi
    226a:	e8 51 ea ff ff       	callq  cc0 <free@plt>
    226f:	90                   	nop
    2270:	c9                   	leaveq 
    2271:	c3                   	retq   

0000000000002272 <STNextToken>:
    2272:	55                   	push   %rbp
    2273:	48 89 e5             	mov    %rsp,%rbp
    2276:	48 83 ec 20          	sub    $0x20,%rsp
    227a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    227e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2282:	89 55 ec             	mov    %edx,-0x14(%rbp)
    2285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2289:	48 8b 48 08          	mov    0x8(%rax),%rcx
    228d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2290:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2298:	48 89 c7             	mov    %rax,%rdi
    229b:	e8 02 00 00 00       	callq  22a2 <STNextTokenUsingDifferentDelimiters>
    22a0:	c9                   	leaveq 
    22a1:	c3                   	retq   

00000000000022a2 <STNextTokenUsingDifferentDelimiters>:
    22a2:	55                   	push   %rbp
    22a3:	48 89 e5             	mov    %rsp,%rbp
    22a6:	48 83 ec 30          	sub    $0x30,%rsp
    22aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    22ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    22b2:	89 55 dc             	mov    %edx,-0x24(%rbp)
    22b5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    22b9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    22be:	75 1f                	jne    22df <STNextTokenUsingDifferentDelimiters+0x3d>
    22c0:	48 8d 0d 39 07 00 00 	lea    0x739(%rip),%rcx        # 2a00 <__PRETTY_FUNCTION__.3106>
    22c7:	ba 22 00 00 00       	mov    $0x22,%edx
    22cc:	48 8d 35 ad 06 00 00 	lea    0x6ad(%rip),%rsi        # 2980 <__PRETTY_FUNCTION__.2693+0x18>
    22d3:	48 8d 3d f1 06 00 00 	lea    0x6f1(%rip),%rdi        # 29cb <__PRETTY_FUNCTION__.2693+0x63>
    22da:	e8 71 ea ff ff       	callq  d50 <__assert_fail@plt>
    22df:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
    22e3:	7f 1f                	jg     2304 <STNextTokenUsingDifferentDelimiters+0x62>
    22e5:	48 8d 0d 14 07 00 00 	lea    0x714(%rip),%rcx        # 2a00 <__PRETTY_FUNCTION__.3106>
    22ec:	ba 23 00 00 00       	mov    $0x23,%edx
    22f1:	48 8d 35 88 06 00 00 	lea    0x688(%rip),%rsi        # 2980 <__PRETTY_FUNCTION__.2693+0x18>
    22f8:	48 8d 3d db 06 00 00 	lea    0x6db(%rip),%rdi        # 29da <__PRETTY_FUNCTION__.2693+0x72>
    22ff:	e8 4c ea ff ff       	callq  d50 <__assert_fail@plt>
    2304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2308:	8b 40 10             	mov    0x10(%rax),%eax
    230b:	85 c0                	test   %eax,%eax
    230d:	74 13                	je     2322 <STNextTokenUsingDifferentDelimiters+0x80>
    230f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2317:	48 89 d6             	mov    %rdx,%rsi
    231a:	48 89 c7             	mov    %rax,%rdi
    231d:	e8 c5 01 00 00       	callq  24e7 <STSkipOver>
    2322:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2326:	48 8b 00             	mov    (%rax),%rax
    2329:	48 89 c7             	mov    %rax,%rdi
    232c:	e8 df ea ff ff       	callq  e10 <_IO_getc@plt>
    2331:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2334:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    2338:	75 0a                	jne    2344 <STNextTokenUsingDifferentDelimiters+0xa2>
    233a:	b8 00 00 00 00       	mov    $0x0,%eax
    233f:	e9 bc 00 00 00       	jmpq   2400 <STNextTokenUsingDifferentDelimiters+0x15e>
    2344:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2347:	89 c2                	mov    %eax,%edx
    2349:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    234d:	88 10                	mov    %dl,(%rax)
    234f:	8b 55 fc             	mov    -0x4(%rbp),%edx
    2352:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2356:	89 d6                	mov    %edx,%esi
    2358:	48 89 c7             	mov    %rax,%rdi
    235b:	e8 d0 e9 ff ff       	callq  d30 <strchr@plt>
    2360:	48 85 c0             	test   %rax,%rax
    2363:	74 15                	je     237a <STNextTokenUsingDifferentDelimiters+0xd8>
    2365:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2369:	48 83 c0 01          	add    $0x1,%rax
    236d:	c6 00 00             	movb   $0x0,(%rax)
    2370:	b8 01 00 00 00       	mov    $0x1,%eax
    2375:	e9 86 00 00 00       	jmpq   2400 <STNextTokenUsingDifferentDelimiters+0x15e>
    237a:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
    2381:	eb 5a                	jmp    23dd <STNextTokenUsingDifferentDelimiters+0x13b>
    2383:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2387:	48 8b 00             	mov    (%rax),%rax
    238a:	48 89 c7             	mov    %rax,%rdi
    238d:	e8 de e9 ff ff       	callq  d70 <fgetc@plt>
    2392:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2395:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    2399:	74 4f                	je     23ea <STNextTokenUsingDifferentDelimiters+0x148>
    239b:	8b 55 fc             	mov    -0x4(%rbp),%edx
    239e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    23a2:	89 d6                	mov    %edx,%esi
    23a4:	48 89 c7             	mov    %rax,%rdi
    23a7:	e8 84 e9 ff ff       	callq  d30 <strchr@plt>
    23ac:	48 85 c0             	test   %rax,%rax
    23af:	74 16                	je     23c7 <STNextTokenUsingDifferentDelimiters+0x125>
    23b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    23b5:	48 8b 10             	mov    (%rax),%rdx
    23b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    23bb:	48 89 d6             	mov    %rdx,%rsi
    23be:	89 c7                	mov    %eax,%edi
    23c0:	e8 5b ea ff ff       	callq  e20 <ungetc@plt>
    23c5:	eb 24                	jmp    23eb <STNextTokenUsingDifferentDelimiters+0x149>
    23c7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    23ca:	48 63 d0             	movslq %eax,%rdx
    23cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23d1:	48 01 d0             	add    %rdx,%rax
    23d4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    23d7:	88 10                	mov    %dl,(%rax)
    23d9:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    23dd:	8b 45 dc             	mov    -0x24(%rbp),%eax
    23e0:	83 e8 01             	sub    $0x1,%eax
    23e3:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    23e6:	7c 9b                	jl     2383 <STNextTokenUsingDifferentDelimiters+0xe1>
    23e8:	eb 01                	jmp    23eb <STNextTokenUsingDifferentDelimiters+0x149>
    23ea:	90                   	nop
    23eb:	8b 45 f8             	mov    -0x8(%rbp),%eax
    23ee:	48 63 d0             	movslq %eax,%rdx
    23f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23f5:	48 01 d0             	add    %rdx,%rax
    23f8:	c6 00 00             	movb   $0x0,(%rax)
    23fb:	b8 01 00 00 00       	mov    $0x1,%eax
    2400:	c9                   	leaveq 
    2401:	c3                   	retq   

0000000000002402 <HaveReasonToStop>:
    2402:	55                   	push   %rbp
    2403:	48 89 e5             	mov    %rsp,%rbp
    2406:	48 83 ec 20          	sub    $0x20,%rsp
    240a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    240e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    2411:	89 55 e0             	mov    %edx,-0x20(%rbp)
    2414:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    2417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    241b:	89 d6                	mov    %edx,%esi
    241d:	48 89 c7             	mov    %rax,%rdi
    2420:	e8 0b e9 ff ff       	callq  d30 <strchr@plt>
    2425:	48 85 c0             	test   %rax,%rax
    2428:	0f 95 c0             	setne  %al
    242b:	0f b6 c0             	movzbl %al,%eax
    242e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2431:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    2435:	74 06                	je     243d <HaveReasonToStop+0x3b>
    2437:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    243b:	74 0c                	je     2449 <HaveReasonToStop+0x47>
    243d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    2441:	75 0d                	jne    2450 <HaveReasonToStop+0x4e>
    2443:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    2447:	74 07                	je     2450 <HaveReasonToStop+0x4e>
    2449:	b8 01 00 00 00       	mov    $0x1,%eax
    244e:	eb 05                	jmp    2455 <HaveReasonToStop+0x53>
    2450:	b8 00 00 00 00       	mov    $0x0,%eax
    2455:	c9                   	leaveq 
    2456:	c3                   	retq   

0000000000002457 <STSkipHelper>:
    2457:	55                   	push   %rbp
    2458:	48 89 e5             	mov    %rsp,%rbp
    245b:	48 83 ec 30          	sub    $0x30,%rsp
    245f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2463:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2467:	89 55 dc             	mov    %edx,-0x24(%rbp)
    246a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    246e:	48 8b 00             	mov    (%rax),%rax
    2471:	48 89 c7             	mov    %rax,%rdi
    2474:	e8 97 e9 ff ff       	callq  e10 <_IO_getc@plt>
    2479:	89 45 fc             	mov    %eax,-0x4(%rbp)
    247c:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    2480:	75 07                	jne    2489 <STSkipHelper+0x32>
    2482:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2487:	eb 32                	jmp    24bb <STSkipHelper+0x64>
    2489:	8b 55 dc             	mov    -0x24(%rbp),%edx
    248c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    248f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2493:	89 ce                	mov    %ecx,%esi
    2495:	48 89 c7             	mov    %rax,%rdi
    2498:	e8 65 ff ff ff       	callq  2402 <HaveReasonToStop>
    249d:	85 c0                	test   %eax,%eax
    249f:	75 02                	jne    24a3 <STSkipHelper+0x4c>
    24a1:	eb c7                	jmp    246a <STSkipHelper+0x13>
    24a3:	90                   	nop
    24a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24a8:	48 8b 10             	mov    (%rax),%rdx
    24ab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24ae:	48 89 d6             	mov    %rdx,%rsi
    24b1:	89 c7                	mov    %eax,%edi
    24b3:	e8 68 e9 ff ff       	callq  e20 <ungetc@plt>
    24b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24bb:	c9                   	leaveq 
    24bc:	c3                   	retq   

00000000000024bd <STSkipUntil>:
    24bd:	55                   	push   %rbp
    24be:	48 89 e5             	mov    %rsp,%rbp
    24c1:	48 83 ec 10          	sub    $0x10,%rsp
    24c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    24c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    24cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    24d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24d5:	ba 00 00 00 00       	mov    $0x0,%edx
    24da:	48 89 ce             	mov    %rcx,%rsi
    24dd:	48 89 c7             	mov    %rax,%rdi
    24e0:	e8 72 ff ff ff       	callq  2457 <STSkipHelper>
    24e5:	c9                   	leaveq 
    24e6:	c3                   	retq   

00000000000024e7 <STSkipOver>:
    24e7:	55                   	push   %rbp
    24e8:	48 89 e5             	mov    %rsp,%rbp
    24eb:	48 83 ec 10          	sub    $0x10,%rsp
    24ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    24f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    24f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    24fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24ff:	ba 01 00 00 00       	mov    $0x1,%edx
    2504:	48 89 ce             	mov    %rcx,%rsi
    2507:	48 89 c7             	mov    %rax,%rdi
    250a:	e8 48 ff ff ff       	callq  2457 <STSkipHelper>
    250f:	c9                   	leaveq 
    2510:	c3                   	retq   
    2511:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2518:	00 00 00 
    251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002520 <__libc_csu_init>:
    2520:	41 57                	push   %r15
    2522:	41 56                	push   %r14
    2524:	49 89 d7             	mov    %rdx,%r15
    2527:	41 55                	push   %r13
    2529:	41 54                	push   %r12
    252b:	4c 8d 25 96 17 20 00 	lea    0x201796(%rip),%r12        # 203cc8 <__frame_dummy_init_array_entry>
    2532:	55                   	push   %rbp
    2533:	48 8d 2d 96 17 20 00 	lea    0x201796(%rip),%rbp        # 203cd0 <__init_array_end>
    253a:	53                   	push   %rbx
    253b:	41 89 fd             	mov    %edi,%r13d
    253e:	49 89 f6             	mov    %rsi,%r14
    2541:	4c 29 e5             	sub    %r12,%rbp
    2544:	48 83 ec 08          	sub    $0x8,%rsp
    2548:	48 c1 fd 03          	sar    $0x3,%rbp
    254c:	e8 37 e7 ff ff       	callq  c88 <_init>
    2551:	48 85 ed             	test   %rbp,%rbp
    2554:	74 20                	je     2576 <__libc_csu_init+0x56>
    2556:	31 db                	xor    %ebx,%ebx
    2558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    255f:	00 
    2560:	4c 89 fa             	mov    %r15,%rdx
    2563:	4c 89 f6             	mov    %r14,%rsi
    2566:	44 89 ef             	mov    %r13d,%edi
    2569:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    256d:	48 83 c3 01          	add    $0x1,%rbx
    2571:	48 39 dd             	cmp    %rbx,%rbp
    2574:	75 ea                	jne    2560 <__libc_csu_init+0x40>
    2576:	48 83 c4 08          	add    $0x8,%rsp
    257a:	5b                   	pop    %rbx
    257b:	5d                   	pop    %rbp
    257c:	41 5c                	pop    %r12
    257e:	41 5d                	pop    %r13
    2580:	41 5e                	pop    %r14
    2582:	41 5f                	pop    %r15
    2584:	c3                   	retq   
    2585:	90                   	nop
    2586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    258d:	00 00 00 

0000000000002590 <__libc_csu_fini>:
    2590:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000002594 <_fini>:
    2594:	48 83 ec 08          	sub    $0x8,%rsp
    2598:	48 83 c4 08          	add    $0x8,%rsp
    259c:	c3                   	retq   
