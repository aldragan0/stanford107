
thesaurus-lookup-linux:     file format elf32-i386


Disassembly of section .init:

08048680 <_init>:
 8048680:	55                   	push   %ebp
 8048681:	89 e5                	mov    %esp,%ebp
 8048683:	83 ec 08             	sub    $0x8,%esp
 8048686:	e8 d9 01 00 00       	call   8048864 <call_gmon_start>
 804868b:	e8 30 02 00 00       	call   80488c0 <frame_dummy>
 8048690:	e8 5b 16 00 00       	call   8049cf0 <__do_global_ctors_aux>
 8048695:	c9                   	leave  
 8048696:	c3                   	ret    

Disassembly of section .plt:

08048698 <.plt>:
 8048698:	ff 35 94 b2 04 08    	pushl  0x804b294
 804869e:	ff 25 98 b2 04 08    	jmp    *0x804b298
 80486a4:	00 00                	add    %al,(%eax)
	...

080486a8 <fgetc@plt>:
 80486a8:	ff 25 9c b2 04 08    	jmp    *0x804b29c
 80486ae:	68 00 00 00 00       	push   $0x0
 80486b3:	e9 e0 ff ff ff       	jmp    8048698 <.plt>

080486b8 <strchr@plt>:
 80486b8:	ff 25 a0 b2 04 08    	jmp    *0x804b2a0
 80486be:	68 08 00 00 00       	push   $0x8
 80486c3:	e9 d0 ff ff ff       	jmp    8048698 <.plt>

080486c8 <ungetc@plt>:
 80486c8:	ff 25 a4 b2 04 08    	jmp    *0x804b2a4
 80486ce:	68 10 00 00 00       	push   $0x10
 80486d3:	e9 c0 ff ff ff       	jmp    8048698 <.plt>

080486d8 <strdup@plt>:
 80486d8:	ff 25 a8 b2 04 08    	jmp    *0x804b2a8
 80486de:	68 18 00 00 00       	push   $0x18
 80486e3:	e9 b0 ff ff ff       	jmp    8048698 <.plt>

080486e8 <strcmp@plt>:
 80486e8:	ff 25 ac b2 04 08    	jmp    *0x804b2ac
 80486ee:	68 20 00 00 00       	push   $0x20
 80486f3:	e9 a0 ff ff ff       	jmp    8048698 <.plt>

080486f8 <fprintf@plt>:
 80486f8:	ff 25 b0 b2 04 08    	jmp    *0x804b2b0
 80486fe:	68 28 00 00 00       	push   $0x28
 8048703:	e9 90 ff ff ff       	jmp    8048698 <.plt>

08048708 <fflush@plt>:
 8048708:	ff 25 b4 b2 04 08    	jmp    *0x804b2b4
 804870e:	68 30 00 00 00       	push   $0x30
 8048713:	e9 80 ff ff ff       	jmp    8048698 <.plt>

08048718 <__assert_fail@plt>:
 8048718:	ff 25 b8 b2 04 08    	jmp    *0x804b2b8
 804871e:	68 38 00 00 00       	push   $0x38
 8048723:	e9 70 ff ff ff       	jmp    8048698 <.plt>

08048728 <tolower@plt>:
 8048728:	ff 25 bc b2 04 08    	jmp    *0x804b2bc
 804872e:	68 40 00 00 00       	push   $0x40
 8048733:	e9 60 ff ff ff       	jmp    8048698 <.plt>

08048738 <malloc@plt>:
 8048738:	ff 25 c0 b2 04 08    	jmp    *0x804b2c0
 804873e:	68 48 00 00 00       	push   $0x48
 8048743:	e9 50 ff ff ff       	jmp    8048698 <.plt>

08048748 <memmove@plt>:
 8048748:	ff 25 c4 b2 04 08    	jmp    *0x804b2c4
 804874e:	68 50 00 00 00       	push   $0x50
 8048753:	e9 40 ff ff ff       	jmp    8048698 <.plt>

08048758 <time@plt>:
 8048758:	ff 25 c8 b2 04 08    	jmp    *0x804b2c8
 804875e:	68 58 00 00 00       	push   $0x58
 8048763:	e9 30 ff ff ff       	jmp    8048698 <.plt>

08048768 <fgets@plt>:
 8048768:	ff 25 cc b2 04 08    	jmp    *0x804b2cc
 804876e:	68 60 00 00 00       	push   $0x60
 8048773:	e9 20 ff ff ff       	jmp    8048698 <.plt>

08048778 <qsort@plt>:
 8048778:	ff 25 d0 b2 04 08    	jmp    *0x804b2d0
 804877e:	68 68 00 00 00       	push   $0x68
 8048783:	e9 10 ff ff ff       	jmp    8048698 <.plt>

08048788 <__libc_start_main@plt>:
 8048788:	ff 25 d4 b2 04 08    	jmp    *0x804b2d4
 804878e:	68 70 00 00 00       	push   $0x70
 8048793:	e9 00 ff ff ff       	jmp    8048698 <.plt>

08048798 <realloc@plt>:
 8048798:	ff 25 d8 b2 04 08    	jmp    *0x804b2d8
 804879e:	68 78 00 00 00       	push   $0x78
 80487a3:	e9 f0 fe ff ff       	jmp    8048698 <.plt>

080487a8 <printf@plt>:
 80487a8:	ff 25 dc b2 04 08    	jmp    *0x804b2dc
 80487ae:	68 80 00 00 00       	push   $0x80
 80487b3:	e9 e0 fe ff ff       	jmp    8048698 <.plt>

080487b8 <fclose@plt>:
 80487b8:	ff 25 e0 b2 04 08    	jmp    *0x804b2e0
 80487be:	68 88 00 00 00       	push   $0x88
 80487c3:	e9 d0 fe ff ff       	jmp    8048698 <.plt>

080487c8 <srand@plt>:
 80487c8:	ff 25 e4 b2 04 08    	jmp    *0x804b2e4
 80487ce:	68 90 00 00 00       	push   $0x90
 80487d3:	e9 c0 fe ff ff       	jmp    8048698 <.plt>

080487d8 <exit@plt>:
 80487d8:	ff 25 e8 b2 04 08    	jmp    *0x804b2e8
 80487de:	68 98 00 00 00       	push   $0x98
 80487e3:	e9 b0 fe ff ff       	jmp    8048698 <.plt>

080487e8 <free@plt>:
 80487e8:	ff 25 ec b2 04 08    	jmp    *0x804b2ec
 80487ee:	68 a0 00 00 00       	push   $0xa0
 80487f3:	e9 a0 fe ff ff       	jmp    8048698 <.plt>

080487f8 <fopen@plt>:
 80487f8:	ff 25 f0 b2 04 08    	jmp    *0x804b2f0
 80487fe:	68 a8 00 00 00       	push   $0xa8
 8048803:	e9 90 fe ff ff       	jmp    8048698 <.plt>

08048808 <_IO_getc@plt>:
 8048808:	ff 25 f4 b2 04 08    	jmp    *0x804b2f4
 804880e:	68 b0 00 00 00       	push   $0xb0
 8048813:	e9 80 fe ff ff       	jmp    8048698 <.plt>

08048818 <rand@plt>:
 8048818:	ff 25 f8 b2 04 08    	jmp    *0x804b2f8
 804881e:	68 b8 00 00 00       	push   $0xb8
 8048823:	e9 70 fe ff ff       	jmp    8048698 <.plt>

08048828 <bsearch@plt>:
 8048828:	ff 25 fc b2 04 08    	jmp    *0x804b2fc
 804882e:	68 c0 00 00 00       	push   $0xc0
 8048833:	e9 60 fe ff ff       	jmp    8048698 <.plt>

Disassembly of section .text:

08048840 <_start>:
 8048840:	31 ed                	xor    %ebp,%ebp
 8048842:	5e                   	pop    %esi
 8048843:	89 e1                	mov    %esp,%ecx
 8048845:	83 e4 f0             	and    $0xfffffff0,%esp
 8048848:	50                   	push   %eax
 8048849:	54                   	push   %esp
 804884a:	52                   	push   %edx
 804884b:	68 9d 9c 04 08       	push   $0x8049c9d
 8048850:	68 4c 9c 04 08       	push   $0x8049c4c
 8048855:	51                   	push   %ecx
 8048856:	56                   	push   %esi
 8048857:	68 8f 8d 04 08       	push   $0x8048d8f
 804885c:	e8 27 ff ff ff       	call   8048788 <__libc_start_main@plt>
 8048861:	f4                   	hlt    
 8048862:	90                   	nop
 8048863:	90                   	nop

08048864 <call_gmon_start>:
 8048864:	55                   	push   %ebp
 8048865:	89 e5                	mov    %esp,%ebp
 8048867:	53                   	push   %ebx
 8048868:	e8 1b 00 00 00       	call   8048888 <__i686.get_pc_thunk.bx>
 804886d:	81 c3 23 2a 00 00    	add    $0x2a23,%ebx
 8048873:	83 ec 04             	sub    $0x4,%esp
 8048876:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804887c:	85 c0                	test   %eax,%eax
 804887e:	74 02                	je     8048882 <call_gmon_start+0x1e>
 8048880:	ff d0                	call   *%eax
 8048882:	83 c4 04             	add    $0x4,%esp
 8048885:	5b                   	pop    %ebx
 8048886:	5d                   	pop    %ebp
 8048887:	c3                   	ret    

08048888 <__i686.get_pc_thunk.bx>:
 8048888:	8b 1c 24             	mov    (%esp),%ebx
 804888b:	c3                   	ret    
 804888c:	90                   	nop
 804888d:	90                   	nop
 804888e:	90                   	nop
 804888f:	90                   	nop

08048890 <__do_global_dtors_aux>:
 8048890:	55                   	push   %ebp
 8048891:	89 e5                	mov    %esp,%ebp
 8048893:	83 ec 08             	sub    $0x8,%esp
 8048896:	80 3d 18 b3 04 08 00 	cmpb   $0x0,0x804b318
 804889d:	74 0c                	je     80488ab <__do_global_dtors_aux+0x1b>
 804889f:	eb 1c                	jmp    80488bd <__do_global_dtors_aux+0x2d>
 80488a1:	83 c0 04             	add    $0x4,%eax
 80488a4:	a3 08 b3 04 08       	mov    %eax,0x804b308
 80488a9:	ff d2                	call   *%edx
 80488ab:	a1 08 b3 04 08       	mov    0x804b308,%eax
 80488b0:	8b 10                	mov    (%eax),%edx
 80488b2:	85 d2                	test   %edx,%edx
 80488b4:	75 eb                	jne    80488a1 <__do_global_dtors_aux+0x11>
 80488b6:	c6 05 18 b3 04 08 01 	movb   $0x1,0x804b318
 80488bd:	c9                   	leave  
 80488be:	c3                   	ret    
 80488bf:	90                   	nop

080488c0 <frame_dummy>:
 80488c0:	55                   	push   %ebp
 80488c1:	89 e5                	mov    %esp,%ebp
 80488c3:	83 ec 08             	sub    $0x8,%esp
 80488c6:	a1 c0 b1 04 08       	mov    0x804b1c0,%eax
 80488cb:	85 c0                	test   %eax,%eax
 80488cd:	74 12                	je     80488e1 <frame_dummy+0x21>
 80488cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80488d4:	85 c0                	test   %eax,%eax
 80488d6:	74 09                	je     80488e1 <frame_dummy+0x21>
 80488d8:	c7 04 24 c0 b1 04 08 	movl   $0x804b1c0,(%esp)
 80488df:	ff d0                	call   *%eax
 80488e1:	c9                   	leave  
 80488e2:	c3                   	ret    
 80488e3:	90                   	nop

080488e4 <StringHash>:
 80488e4:	55                   	push   %ebp
 80488e5:	89 e5                	mov    %esp,%ebp
 80488e7:	57                   	push   %edi
 80488e8:	53                   	push   %ebx
 80488e9:	83 ec 20             	sub    $0x20,%esp
 80488ec:	8b 45 08             	mov    0x8(%ebp),%eax
 80488ef:	8b 00                	mov    (%eax),%eax
 80488f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80488f4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80488fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048902:	eb 2a                	jmp    804892e <StringHash+0x4a>
 8048904:	a1 68 9d 04 08       	mov    0x8049d68,%eax
 8048909:	89 c3                	mov    %eax,%ebx
 804890b:	0f af 5d f0          	imul   -0x10(%ebp),%ebx
 804890f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048912:	03 45 ec             	add    -0x14(%ebp),%eax
 8048915:	0f b6 00             	movzbl (%eax),%eax
 8048918:	0f be c0             	movsbl %al,%eax
 804891b:	89 04 24             	mov    %eax,(%esp)
 804891e:	e8 05 fe ff ff       	call   8048728 <tolower@plt>
 8048923:	8d 04 03             	lea    (%ebx,%eax,1),%eax
 8048926:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048929:	8d 45 f4             	lea    -0xc(%ebp),%eax
 804892c:	ff 00                	incl   (%eax)
 804892e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048931:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048934:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8048939:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804893c:	b0 00                	mov    $0x0,%al
 804893e:	fc                   	cld    
 804893f:	8b 7d e4             	mov    -0x1c(%ebp),%edi
 8048942:	f2 ae                	repnz scas %es:(%edi),%al
 8048944:	89 c8                	mov    %ecx,%eax
 8048946:	f7 d0                	not    %eax
 8048948:	48                   	dec    %eax
 8048949:	39 c2                	cmp    %eax,%edx
 804894b:	72 b7                	jb     8048904 <StringHash+0x20>
 804894d:	8b 55 0c             	mov    0xc(%ebp),%edx
 8048950:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048953:	89 d1                	mov    %edx,%ecx
 8048955:	ba 00 00 00 00       	mov    $0x0,%edx
 804895a:	f7 f1                	div    %ecx
 804895c:	89 d0                	mov    %edx,%eax
 804895e:	83 c4 20             	add    $0x20,%esp
 8048961:	5b                   	pop    %ebx
 8048962:	5f                   	pop    %edi
 8048963:	5d                   	pop    %ebp
 8048964:	c3                   	ret    

08048965 <StringCompare>:
 8048965:	55                   	push   %ebp
 8048966:	89 e5                	mov    %esp,%ebp
 8048968:	83 ec 08             	sub    $0x8,%esp
 804896b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804896e:	8b 10                	mov    (%eax),%edx
 8048970:	8b 45 08             	mov    0x8(%ebp),%eax
 8048973:	8b 00                	mov    (%eax),%eax
 8048975:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048979:	89 04 24             	mov    %eax,(%esp)
 804897c:	e8 67 fd ff ff       	call   80486e8 <strcmp@plt>
 8048981:	c9                   	leave  
 8048982:	c3                   	ret    

08048983 <ThesEntryFree>:
 8048983:	55                   	push   %ebp
 8048984:	89 e5                	mov    %esp,%ebp
 8048986:	83 ec 18             	sub    $0x18,%esp
 8048989:	8b 45 08             	mov    0x8(%ebp),%eax
 804898c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804898f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048992:	8b 00                	mov    (%eax),%eax
 8048994:	89 04 24             	mov    %eax,(%esp)
 8048997:	e8 4c fe ff ff       	call   80487e8 <free@plt>
 804899c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804899f:	83 c0 04             	add    $0x4,%eax
 80489a2:	89 04 24             	mov    %eax,(%esp)
 80489a5:	e8 64 05 00 00       	call   8048f0e <VectorDispose>
 80489aa:	c9                   	leave  
 80489ab:	c3                   	ret    

080489ac <StringFree>:
 80489ac:	55                   	push   %ebp
 80489ad:	89 e5                	mov    %esp,%ebp
 80489af:	83 ec 08             	sub    $0x8,%esp
 80489b2:	8b 45 08             	mov    0x8(%ebp),%eax
 80489b5:	8b 00                	mov    (%eax),%eax
 80489b7:	89 04 24             	mov    %eax,(%esp)
 80489ba:	e8 29 fe ff ff       	call   80487e8 <free@plt>
 80489bf:	c9                   	leave  
 80489c0:	c3                   	ret    

080489c1 <TokenizeAndBuildThesaurus>:
 80489c1:	55                   	push   %ebp
 80489c2:	89 e5                	mov    %esp,%ebp
 80489c4:	53                   	push   %ebx
 80489c5:	81 ec 44 08 00 00    	sub    $0x844,%esp
 80489cb:	c7 04 24 6c 9d 04 08 	movl   $0x8049d6c,(%esp)
 80489d2:	e8 d1 fd ff ff       	call   80487a8 <printf@plt>
 80489d7:	a1 0c b3 04 08       	mov    0x804b30c,%eax
 80489dc:	89 04 24             	mov    %eax,(%esp)
 80489df:	e8 24 fd ff ff       	call   8048708 <fflush@plt>
 80489e4:	e9 33 01 00 00       	jmp    8048b1c <TokenizeAndBuildThesaurus+0x15b>
 80489e9:	8d 85 fc f7 ff ff    	lea    -0x804(%ebp),%eax
 80489ef:	89 04 24             	mov    %eax,(%esp)
 80489f2:	e8 e1 fc ff ff       	call   80486d8 <strdup@plt>
 80489f7:	89 85 e0 f7 ff ff    	mov    %eax,-0x820(%ebp)
 80489fd:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)
 8048a04:	00 
 8048a05:	c7 44 24 08 ac 89 04 	movl   $0x80489ac,0x8(%esp)
 8048a0c:	08 
 8048a0d:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8048a14:	00 
 8048a15:	8d 85 e0 f7 ff ff    	lea    -0x820(%ebp),%eax
 8048a1b:	83 c0 04             	add    $0x4,%eax
 8048a1e:	89 04 24             	mov    %eax,(%esp)
 8048a21:	e8 0a 04 00 00       	call   8048e30 <VectorNew>
 8048a26:	eb 4c                	jmp    8048a74 <TokenizeAndBuildThesaurus+0xb3>
 8048a28:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)
 8048a2f:	00 
 8048a30:	8d 85 fc f7 ff ff    	lea    -0x804(%ebp),%eax
 8048a36:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a3a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048a3d:	89 04 24             	mov    %eax,(%esp)
 8048a40:	e8 9f 0f 00 00       	call   80499e4 <STNextToken>
 8048a45:	8d 85 fc f7 ff ff    	lea    -0x804(%ebp),%eax
 8048a4b:	89 04 24             	mov    %eax,(%esp)
 8048a4e:	e8 85 fc ff ff       	call   80486d8 <strdup@plt>
 8048a53:	89 85 dc f7 ff ff    	mov    %eax,-0x824(%ebp)
 8048a59:	8d 85 dc f7 ff ff    	lea    -0x824(%ebp),%eax
 8048a5f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a63:	8d 85 e0 f7 ff ff    	lea    -0x820(%ebp),%eax
 8048a69:	83 c0 04             	add    $0x4,%eax
 8048a6c:	89 04 24             	mov    %eax,(%esp)
 8048a6f:	e8 d5 07 00 00       	call   8049249 <VectorAppend>
 8048a74:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)
 8048a7b:	00 
 8048a7c:	8d 85 fc f7 ff ff    	lea    -0x804(%ebp),%eax
 8048a82:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a86:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048a89:	89 04 24             	mov    %eax,(%esp)
 8048a8c:	e8 53 0f 00 00       	call   80499e4 <STNextToken>
 8048a91:	85 c0                	test   %eax,%eax
 8048a93:	74 0b                	je     8048aa0 <TokenizeAndBuildThesaurus+0xdf>
 8048a95:	0f b6 85 fc f7 ff ff 	movzbl -0x804(%ebp),%eax
 8048a9c:	3c 2c                	cmp    $0x2c,%al
 8048a9e:	74 88                	je     8048a28 <TokenizeAndBuildThesaurus+0x67>
 8048aa0:	8d 85 e0 f7 ff ff    	lea    -0x820(%ebp),%eax
 8048aa6:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048aaa:	8b 45 08             	mov    0x8(%ebp),%eax
 8048aad:	89 04 24             	mov    %eax,(%esp)
 8048ab0:	e8 93 0c 00 00       	call   8049748 <HashSetEnter>
 8048ab5:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ab8:	89 04 24             	mov    %eax,(%esp)
 8048abb:	e8 08 0c 00 00       	call   80496c8 <HashSetCount>
 8048ac0:	89 c1                	mov    %eax,%ecx
 8048ac2:	c7 85 d4 f7 ff ff d3 	movl   $0x10624dd3,-0x82c(%ebp)
 8048ac9:	4d 62 10 
 8048acc:	8b 85 d4 f7 ff ff    	mov    -0x82c(%ebp),%eax
 8048ad2:	f7 e9                	imul   %ecx
 8048ad4:	c1 fa 06             	sar    $0x6,%edx
 8048ad7:	89 c8                	mov    %ecx,%eax
 8048ad9:	c1 f8 1f             	sar    $0x1f,%eax
 8048adc:	89 d3                	mov    %edx,%ebx
 8048ade:	29 c3                	sub    %eax,%ebx
 8048ae0:	89 9d d8 f7 ff ff    	mov    %ebx,-0x828(%ebp)
 8048ae6:	69 85 d8 f7 ff ff e8 	imul   $0x3e8,-0x828(%ebp),%eax
 8048aed:	03 00 00 
 8048af0:	89 ca                	mov    %ecx,%edx
 8048af2:	29 c2                	sub    %eax,%edx
 8048af4:	89 95 d8 f7 ff ff    	mov    %edx,-0x828(%ebp)
 8048afa:	83 bd d8 f7 ff ff 00 	cmpl   $0x0,-0x828(%ebp)
 8048b01:	75 19                	jne    8048b1c <TokenizeAndBuildThesaurus+0x15b>
 8048b03:	c7 04 24 8c 9d 04 08 	movl   $0x8049d8c,(%esp)
 8048b0a:	e8 99 fc ff ff       	call   80487a8 <printf@plt>
 8048b0f:	a1 0c b3 04 08       	mov    0x804b30c,%eax
 8048b14:	89 04 24             	mov    %eax,(%esp)
 8048b17:	e8 ec fb ff ff       	call   8048708 <fflush@plt>
 8048b1c:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)
 8048b23:	00 
 8048b24:	8d 85 fc f7 ff ff    	lea    -0x804(%ebp),%eax
 8048b2a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048b2e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b31:	89 04 24             	mov    %eax,(%esp)
 8048b34:	e8 ab 0e 00 00       	call   80499e4 <STNextToken>
 8048b39:	85 c0                	test   %eax,%eax
 8048b3b:	0f 85 a8 fe ff ff    	jne    80489e9 <TokenizeAndBuildThesaurus+0x28>
 8048b41:	c7 04 24 8e 9d 04 08 	movl   $0x8049d8e,(%esp)
 8048b48:	e8 5b fc ff ff       	call   80487a8 <printf@plt>
 8048b4d:	a1 0c b3 04 08       	mov    0x804b30c,%eax
 8048b52:	89 04 24             	mov    %eax,(%esp)
 8048b55:	e8 ae fb ff ff       	call   8048708 <fflush@plt>
 8048b5a:	81 c4 44 08 00 00    	add    $0x844,%esp
 8048b60:	5b                   	pop    %ebx
 8048b61:	5d                   	pop    %ebp
 8048b62:	c3                   	ret    

08048b63 <ReadThesaurus>:
 8048b63:	55                   	push   %ebp
 8048b64:	89 e5                	mov    %esp,%ebp
 8048b66:	83 ec 28             	sub    $0x28,%esp
 8048b69:	c7 44 24 04 9c 9d 04 	movl   $0x8049d9c,0x4(%esp)
 8048b70:	08 
 8048b71:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b74:	89 04 24             	mov    %eax,(%esp)
 8048b77:	e8 7c fc ff ff       	call   80487f8 <fopen@plt>
 8048b7c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048b7f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 8048b83:	75 29                	jne    8048bae <ReadThesaurus+0x4b>
 8048b85:	8b 15 10 b3 04 08    	mov    0x804b310,%edx
 8048b8b:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b8e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048b92:	c7 44 24 04 a0 9d 04 	movl   $0x8049da0,0x4(%esp)
 8048b99:	08 
 8048b9a:	89 14 24             	mov    %edx,(%esp)
 8048b9d:	e8 56 fb ff ff       	call   80486f8 <fprintf@plt>
 8048ba2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048ba9:	e8 2a fc ff ff       	call   80487d8 <exit@plt>
 8048bae:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048bb5:	00 
 8048bb6:	c7 44 24 08 ca 9d 04 	movl   $0x8049dca,0x8(%esp)
 8048bbd:	08 
 8048bbe:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048bc1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048bc5:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048bc8:	89 04 24             	mov    %eax,(%esp)
 8048bcb:	e8 50 0d 00 00       	call   8049920 <STNew>
 8048bd0:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048bd3:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048bd7:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bda:	89 04 24             	mov    %eax,(%esp)
 8048bdd:	e8 df fd ff ff       	call   80489c1 <TokenizeAndBuildThesaurus>
 8048be2:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048be5:	89 04 24             	mov    %eax,(%esp)
 8048be8:	e8 e1 0d 00 00       	call   80499ce <STDispose>
 8048bed:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 c0 fb ff ff       	call   80487b8 <fclose@plt>
 8048bf8:	c9                   	leave  
 8048bf9:	c3                   	ret    

08048bfa <RandomInteger>:
 8048bfa:	55                   	push   %ebp
 8048bfb:	89 e5                	mov    %esp,%ebp
 8048bfd:	83 ec 28             	sub    $0x28,%esp
 8048c00:	a1 1c b3 04 08       	mov    0x804b31c,%eax
 8048c05:	85 c0                	test   %eax,%eax
 8048c07:	75 1e                	jne    8048c27 <RandomInteger+0x2d>
 8048c09:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048c10:	e8 43 fb ff ff       	call   8048758 <time@plt>
 8048c15:	89 04 24             	mov    %eax,(%esp)
 8048c18:	e8 ab fb ff ff       	call   80487c8 <srand@plt>
 8048c1d:	c7 05 1c b3 04 08 01 	movl   $0x1,0x804b31c
 8048c24:	00 00 00 
 8048c27:	e8 ec fb ff ff       	call   8048818 <rand@plt>
 8048c2c:	50                   	push   %eax
 8048c2d:	db 04 24             	fildl  (%esp)
 8048c30:	8d 64 24 04          	lea    0x4(%esp),%esp
 8048c34:	dd 05 d0 9d 04 08    	fldl   0x8049dd0
 8048c3a:	de f9                	fdivrp %st,%st(1)
 8048c3c:	dd 5d f0             	fstpl  -0x10(%ebp)
 8048c3f:	8b 55 08             	mov    0x8(%ebp),%edx
 8048c42:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048c45:	29 d0                	sub    %edx,%eax
 8048c47:	40                   	inc    %eax
 8048c48:	50                   	push   %eax
 8048c49:	db 04 24             	fildl  (%esp)
 8048c4c:	8d 64 24 04          	lea    0x4(%esp),%esp
 8048c50:	dc 4d f0             	fmull  -0x10(%ebp)
 8048c53:	d9 7d ee             	fnstcw -0x12(%ebp)
 8048c56:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax
 8048c5a:	66 0d 00 0c          	or     $0xc00,%ax
 8048c5e:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
 8048c62:	d9 6d ec             	fldcw  -0x14(%ebp)
 8048c65:	db 5d fc             	fistpl -0x4(%ebp)
 8048c68:	d9 6d ee             	fldcw  -0x12(%ebp)
 8048c6b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048c6e:	03 45 08             	add    0x8(%ebp),%eax
 8048c71:	c9                   	leave  
 8048c72:	c3                   	ret    

08048c73 <QueryThesaurus>:
 8048c73:	55                   	push   %ebp
 8048c74:	89 e5                	mov    %esp,%ebp
 8048c76:	57                   	push   %edi
 8048c77:	81 ec 24 04 00 00    	sub    $0x424,%esp
 8048c7d:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8048c83:	89 85 ec fb ff ff    	mov    %eax,-0x414(%ebp)
 8048c89:	eb 00                	jmp    8048c8b <QueryThesaurus+0x18>
 8048c8b:	c7 04 24 d8 9d 04 08 	movl   $0x8049dd8,(%esp)
 8048c92:	e8 11 fb ff ff       	call   80487a8 <printf@plt>
 8048c97:	a1 14 b3 04 08       	mov    0x804b314,%eax
 8048c9c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048ca0:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 8048ca7:	00 
 8048ca8:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8048cae:	89 04 24             	mov    %eax,(%esp)
 8048cb1:	e8 b2 fa ff ff       	call   8048768 <fgets@plt>
 8048cb6:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8048cbc:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8048cc1:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
 8048cc7:	b0 00                	mov    $0x0,%al
 8048cc9:	fc                   	cld    
 8048cca:	8b bd e8 fb ff ff    	mov    -0x418(%ebp),%edi
 8048cd0:	f2 ae                	repnz scas %es:(%edi),%al
 8048cd2:	89 c8                	mov    %ecx,%eax
 8048cd4:	f7 d0                	not    %eax
 8048cd6:	48                   	dec    %eax
 8048cd7:	48                   	dec    %eax
 8048cd8:	c6 84 05 f0 fb ff ff 	movb   $0x0,-0x410(%ebp,%eax,1)
 8048cdf:	00 
 8048ce0:	0f b6 85 f0 fb ff ff 	movzbl -0x410(%ebp),%eax
 8048ce7:	84 c0                	test   %al,%al
 8048ce9:	0f 84 97 00 00 00    	je     8048d86 <QueryThesaurus+0x113>
 8048cef:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
 8048cf5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048cf9:	8b 45 08             	mov    0x8(%ebp),%eax
 8048cfc:	89 04 24             	mov    %eax,(%esp)
 8048cff:	e8 45 0b 00 00       	call   8049849 <HashSetLookup>
 8048d04:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048d07:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8048d0b:	74 5e                	je     8048d6b <QueryThesaurus+0xf8>
 8048d0d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048d10:	83 c0 04             	add    $0x4,%eax
 8048d13:	89 04 24             	mov    %eax,(%esp)
 8048d16:	e8 4d 02 00 00       	call   8048f68 <VectorLength>
 8048d1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048d1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048d21:	48                   	dec    %eax
 8048d22:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d26:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048d2d:	e8 c8 fe ff ff       	call   8048bfa <RandomInteger>
 8048d32:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048d35:	83 c2 04             	add    $0x4,%edx
 8048d38:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d3c:	89 14 24             	mov    %edx,(%esp)
 8048d3f:	e8 43 02 00 00       	call   8048f87 <VectorNth>
 8048d44:	8b 00                	mov    (%eax),%eax
 8048d46:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048d49:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048d4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048d50:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8048d56:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d5a:	c7 04 24 f4 9d 04 08 	movl   $0x8049df4,(%esp)
 8048d61:	e8 42 fa ff ff       	call   80487a8 <printf@plt>
 8048d66:	e9 20 ff ff ff       	jmp    8048c8b <QueryThesaurus+0x18>
 8048d6b:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
 8048d71:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d75:	c7 04 24 3c 9e 04 08 	movl   $0x8049e3c,(%esp)
 8048d7c:	e8 27 fa ff ff       	call   80487a8 <printf@plt>
 8048d81:	e9 05 ff ff ff       	jmp    8048c8b <QueryThesaurus+0x18>
 8048d86:	81 c4 24 04 00 00    	add    $0x424,%esp
 8048d8c:	5f                   	pop    %edi
 8048d8d:	5d                   	pop    %ebp
 8048d8e:	c3                   	ret    

08048d8f <main>:
 8048d8f:	55                   	push   %ebp
 8048d90:	89 e5                	mov    %esp,%ebp
 8048d92:	83 ec 48             	sub    $0x48,%esp
 8048d95:	83 e4 f0             	and    $0xfffffff0,%esp
 8048d98:	b8 00 00 00 00       	mov    $0x0,%eax
 8048d9d:	83 c0 0f             	add    $0xf,%eax
 8048da0:	83 c0 0f             	add    $0xf,%eax
 8048da3:	c1 e8 04             	shr    $0x4,%eax
 8048da6:	c1 e0 04             	shl    $0x4,%eax
 8048da9:	29 c4                	sub    %eax,%esp
 8048dab:	a1 74 9e 04 08       	mov    0x8049e74,%eax
 8048db0:	c7 44 24 14 83 89 04 	movl   $0x8048983,0x14(%esp)
 8048db7:	08 
 8048db8:	c7 44 24 10 65 89 04 	movl   $0x8048965,0x10(%esp)
 8048dbf:	08 
 8048dc0:	c7 44 24 0c e4 88 04 	movl   $0x80488e4,0xc(%esp)
 8048dc7:	08 
 8048dc8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048dcc:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)
 8048dd3:	00 
 8048dd4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048dd7:	89 04 24             	mov    %eax,(%esp)
 8048dda:	e8 31 07 00 00       	call   8049510 <HashSetNew>
 8048ddf:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8048de3:	74 0d                	je     8048df2 <main+0x63>
 8048de5:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048de8:	83 c0 04             	add    $0x4,%eax
 8048deb:	8b 00                	mov    (%eax),%eax
 8048ded:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048df0:	eb 07                	jmp    8048df9 <main+0x6a>
 8048df2:	c7 45 dc 78 9e 04 08 	movl   $0x8049e78,-0x24(%ebp)
 8048df9:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048dfc:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8048dff:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048e02:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048e06:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048e09:	89 04 24             	mov    %eax,(%esp)
 8048e0c:	e8 52 fd ff ff       	call   8048b63 <ReadThesaurus>
 8048e11:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048e14:	89 04 24             	mov    %eax,(%esp)
 8048e17:	e8 57 fe ff ff       	call   8048c73 <QueryThesaurus>
 8048e1c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048e1f:	89 04 24             	mov    %eax,(%esp)
 8048e22:	e8 57 08 00 00       	call   804967e <HashSetDispose>
 8048e27:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e2c:	c9                   	leave  
 8048e2d:	c3                   	ret    
 8048e2e:	90                   	nop
 8048e2f:	90                   	nop

08048e30 <VectorNew>:
 8048e30:	55                   	push   %ebp
 8048e31:	89 e5                	mov    %esp,%ebp
 8048e33:	83 ec 18             	sub    $0x18,%esp
 8048e36:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8048e3a:	7f 24                	jg     8048e60 <VectorNew+0x30>
 8048e3c:	c7 44 24 0c c4 9e 04 	movl   $0x8049ec4,0xc(%esp)
 8048e43:	08 
 8048e44:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8048e4b:	00 
 8048e4c:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8048e53:	08 
 8048e54:	c7 04 24 d7 9e 04 08 	movl   $0x8049ed7,(%esp)
 8048e5b:	e8 b8 f8 ff ff       	call   8048718 <__assert_fail@plt>
 8048e60:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 8048e64:	79 24                	jns    8048e8a <VectorNew+0x5a>
 8048e66:	c7 44 24 0c c4 9e 04 	movl   $0x8049ec4,0xc(%esp)
 8048e6d:	08 
 8048e6e:	c7 44 24 08 0b 00 00 	movl   $0xb,0x8(%esp)
 8048e75:	00 
 8048e76:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8048e7d:	08 
 8048e7e:	c7 04 24 e4 9e 04 08 	movl   $0x8049ee4,(%esp)
 8048e85:	e8 8e f8 ff ff       	call   8048718 <__assert_fail@plt>
 8048e8a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 8048e8e:	75 08                	jne    8048e98 <VectorNew+0x68>
 8048e90:	a1 c0 9e 04 08       	mov    0x8049ec0,%eax
 8048e95:	89 45 14             	mov    %eax,0x14(%ebp)
 8048e98:	8b 45 14             	mov    0x14(%ebp),%eax
 8048e9b:	0f af 45 0c          	imul   0xc(%ebp),%eax
 8048e9f:	89 04 24             	mov    %eax,(%esp)
 8048ea2:	e8 91 f8 ff ff       	call   8048738 <malloc@plt>
 8048ea7:	89 c2                	mov    %eax,%edx
 8048ea9:	8b 45 08             	mov    0x8(%ebp),%eax
 8048eac:	89 10                	mov    %edx,(%eax)
 8048eae:	8b 45 08             	mov    0x8(%ebp),%eax
 8048eb1:	8b 00                	mov    (%eax),%eax
 8048eb3:	85 c0                	test   %eax,%eax
 8048eb5:	75 24                	jne    8048edb <VectorNew+0xab>
 8048eb7:	c7 44 24 0c c4 9e 04 	movl   $0x8049ec4,0xc(%esp)
 8048ebe:	08 
 8048ebf:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)
 8048ec6:	00 
 8048ec7:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8048ece:	08 
 8048ecf:	c7 04 24 fb 9e 04 08 	movl   $0x8049efb,(%esp)
 8048ed6:	e8 3d f8 ff ff       	call   8048718 <__assert_fail@plt>
 8048edb:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ede:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 8048ee5:	8b 55 08             	mov    0x8(%ebp),%edx
 8048ee8:	8b 45 14             	mov    0x14(%ebp),%eax
 8048eeb:	89 42 10             	mov    %eax,0x10(%edx)
 8048eee:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ef1:	8b 50 10             	mov    0x10(%eax),%edx
 8048ef4:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ef7:	89 50 0c             	mov    %edx,0xc(%eax)
 8048efa:	8b 55 08             	mov    0x8(%ebp),%edx
 8048efd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f00:	89 42 04             	mov    %eax,0x4(%edx)
 8048f03:	8b 55 08             	mov    0x8(%ebp),%edx
 8048f06:	8b 45 10             	mov    0x10(%ebp),%eax
 8048f09:	89 42 14             	mov    %eax,0x14(%edx)
 8048f0c:	c9                   	leave  
 8048f0d:	c3                   	ret    

08048f0e <VectorDispose>:
 8048f0e:	55                   	push   %ebp
 8048f0f:	89 e5                	mov    %esp,%ebp
 8048f11:	53                   	push   %ebx
 8048f12:	83 ec 24             	sub    $0x24,%esp
 8048f15:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f18:	8b 40 14             	mov    0x14(%eax),%eax
 8048f1b:	85 c0                	test   %eax,%eax
 8048f1d:	74 36                	je     8048f55 <VectorDispose+0x47>
 8048f1f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048f26:	eb 22                	jmp    8048f4a <VectorDispose+0x3c>
 8048f28:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f2b:	8b 58 14             	mov    0x14(%eax),%ebx
 8048f2e:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048f31:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048f35:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f38:	89 04 24             	mov    %eax,(%esp)
 8048f3b:	e8 47 00 00 00       	call   8048f87 <VectorNth>
 8048f40:	89 04 24             	mov    %eax,(%esp)
 8048f43:	ff d3                	call   *%ebx
 8048f45:	8d 45 f8             	lea    -0x8(%ebp),%eax
 8048f48:	ff 00                	incl   (%eax)
 8048f4a:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f4d:	8b 40 08             	mov    0x8(%eax),%eax
 8048f50:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 8048f53:	7f d3                	jg     8048f28 <VectorDispose+0x1a>
 8048f55:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f58:	8b 00                	mov    (%eax),%eax
 8048f5a:	89 04 24             	mov    %eax,(%esp)
 8048f5d:	e8 86 f8 ff ff       	call   80487e8 <free@plt>
 8048f62:	83 c4 24             	add    $0x24,%esp
 8048f65:	5b                   	pop    %ebx
 8048f66:	5d                   	pop    %ebp
 8048f67:	c3                   	ret    

08048f68 <VectorLength>:
 8048f68:	55                   	push   %ebp
 8048f69:	89 e5                	mov    %esp,%ebp
 8048f6b:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f6e:	8b 40 08             	mov    0x8(%eax),%eax
 8048f71:	5d                   	pop    %ebp
 8048f72:	c3                   	ret    

08048f73 <NthElement>:
 8048f73:	55                   	push   %ebp
 8048f74:	89 e5                	mov    %esp,%ebp
 8048f76:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f79:	0f af 45 10          	imul   0x10(%ebp),%eax
 8048f7d:	89 c2                	mov    %eax,%edx
 8048f7f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f82:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048f85:	5d                   	pop    %ebp
 8048f86:	c3                   	ret    

08048f87 <VectorNth>:
 8048f87:	55                   	push   %ebp
 8048f88:	89 e5                	mov    %esp,%ebp
 8048f8a:	83 ec 18             	sub    $0x18,%esp
 8048f8d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8048f91:	78 0b                	js     8048f9e <VectorNth+0x17>
 8048f93:	8b 45 08             	mov    0x8(%ebp),%eax
 8048f96:	8b 40 08             	mov    0x8(%eax),%eax
 8048f99:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8048f9c:	7f 24                	jg     8048fc2 <VectorNth+0x3b>
 8048f9e:	c7 44 24 0c 13 9f 04 	movl   $0x8049f13,0xc(%esp)
 8048fa5:	08 
 8048fa6:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
 8048fad:	00 
 8048fae:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8048fb5:	08 
 8048fb6:	c7 04 24 20 9f 04 08 	movl   $0x8049f20,(%esp)
 8048fbd:	e8 56 f7 ff ff       	call   8048718 <__assert_fail@plt>
 8048fc2:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fc5:	8b 50 04             	mov    0x4(%eax),%edx
 8048fc8:	8b 45 08             	mov    0x8(%ebp),%eax
 8048fcb:	8b 08                	mov    (%eax),%ecx
 8048fcd:	89 54 24 08          	mov    %edx,0x8(%esp)
 8048fd1:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048fd4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048fd8:	89 0c 24             	mov    %ecx,(%esp)
 8048fdb:	e8 93 ff ff ff       	call   8048f73 <NthElement>
 8048fe0:	c9                   	leave  
 8048fe1:	c3                   	ret    

08048fe2 <VectorReplace>:
 8048fe2:	55                   	push   %ebp
 8048fe3:	89 e5                	mov    %esp,%ebp
 8048fe5:	57                   	push   %edi
 8048fe6:	56                   	push   %esi
 8048fe7:	53                   	push   %ebx
 8048fe8:	83 ec 1c             	sub    $0x1c,%esp
 8048feb:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8048fef:	78 0b                	js     8048ffc <VectorReplace+0x1a>
 8048ff1:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ff4:	8b 40 08             	mov    0x8(%eax),%eax
 8048ff7:	3b 45 10             	cmp    0x10(%ebp),%eax
 8048ffa:	7f 24                	jg     8049020 <VectorReplace+0x3e>
 8048ffc:	c7 44 24 0c 51 9f 04 	movl   $0x8049f51,0xc(%esp)
 8049003:	08 
 8049004:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)
 804900b:	00 
 804900c:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8049013:	08 
 8049014:	c7 04 24 20 9f 04 08 	movl   $0x8049f20,(%esp)
 804901b:	e8 f8 f6 ff ff       	call   8048718 <__assert_fail@plt>
 8049020:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049024:	75 24                	jne    804904a <VectorReplace+0x68>
 8049026:	c7 44 24 0c 51 9f 04 	movl   $0x8049f51,0xc(%esp)
 804902d:	08 
 804902e:	c7 44 24 08 35 00 00 	movl   $0x35,0x8(%esp)
 8049035:	00 
 8049036:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 804903d:	08 
 804903e:	c7 04 24 5f 9f 04 08 	movl   $0x8049f5f,(%esp)
 8049045:	e8 ce f6 ff ff       	call   8048718 <__assert_fail@plt>
 804904a:	8b 45 08             	mov    0x8(%ebp),%eax
 804904d:	8b 40 14             	mov    0x14(%eax),%eax
 8049050:	85 c0                	test   %eax,%eax
 8049052:	74 29                	je     804907d <VectorReplace+0x9b>
 8049054:	8b 45 08             	mov    0x8(%ebp),%eax
 8049057:	8b 58 14             	mov    0x14(%eax),%ebx
 804905a:	8b 45 08             	mov    0x8(%ebp),%eax
 804905d:	8b 50 04             	mov    0x4(%eax),%edx
 8049060:	8b 45 08             	mov    0x8(%ebp),%eax
 8049063:	8b 08                	mov    (%eax),%ecx
 8049065:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049069:	8b 45 10             	mov    0x10(%ebp),%eax
 804906c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049070:	89 0c 24             	mov    %ecx,(%esp)
 8049073:	e8 fb fe ff ff       	call   8048f73 <NthElement>
 8049078:	89 04 24             	mov    %eax,(%esp)
 804907b:	ff d3                	call   *%ebx
 804907d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049080:	8b 40 04             	mov    0x4(%eax),%eax
 8049083:	89 c3                	mov    %eax,%ebx
 8049085:	8b 45 08             	mov    0x8(%ebp),%eax
 8049088:	8b 50 04             	mov    0x4(%eax),%edx
 804908b:	8b 45 08             	mov    0x8(%ebp),%eax
 804908e:	8b 08                	mov    (%eax),%ecx
 8049090:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049094:	8b 45 10             	mov    0x10(%ebp),%eax
 8049097:	89 44 24 04          	mov    %eax,0x4(%esp)
 804909b:	89 0c 24             	mov    %ecx,(%esp)
 804909e:	e8 d0 fe ff ff       	call   8048f73 <NthElement>
 80490a3:	8b 55 0c             	mov    0xc(%ebp),%edx
 80490a6:	89 c7                	mov    %eax,%edi
 80490a8:	89 d6                	mov    %edx,%esi
 80490aa:	fc                   	cld    
 80490ab:	89 d9                	mov    %ebx,%ecx
 80490ad:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 80490af:	83 c4 1c             	add    $0x1c,%esp
 80490b2:	5b                   	pop    %ebx
 80490b3:	5e                   	pop    %esi
 80490b4:	5f                   	pop    %edi
 80490b5:	5d                   	pop    %ebp
 80490b6:	c3                   	ret    

080490b7 <VectorExpand>:
 80490b7:	55                   	push   %ebp
 80490b8:	89 e5                	mov    %esp,%ebp
 80490ba:	83 ec 18             	sub    $0x18,%esp
 80490bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80490c0:	8b 50 0c             	mov    0xc(%eax),%edx
 80490c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80490c6:	8b 40 10             	mov    0x10(%eax),%eax
 80490c9:	01 c2                	add    %eax,%edx
 80490cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80490ce:	89 50 0c             	mov    %edx,0xc(%eax)
 80490d1:	8b 45 08             	mov    0x8(%ebp),%eax
 80490d4:	8b 50 0c             	mov    0xc(%eax),%edx
 80490d7:	8b 45 08             	mov    0x8(%ebp),%eax
 80490da:	8b 40 04             	mov    0x4(%eax),%eax
 80490dd:	0f af c2             	imul   %edx,%eax
 80490e0:	89 c2                	mov    %eax,%edx
 80490e2:	8b 45 08             	mov    0x8(%ebp),%eax
 80490e5:	8b 00                	mov    (%eax),%eax
 80490e7:	89 54 24 04          	mov    %edx,0x4(%esp)
 80490eb:	89 04 24             	mov    %eax,(%esp)
 80490ee:	e8 a5 f6 ff ff       	call   8048798 <realloc@plt>
 80490f3:	89 c2                	mov    %eax,%edx
 80490f5:	8b 45 08             	mov    0x8(%ebp),%eax
 80490f8:	89 10                	mov    %edx,(%eax)
 80490fa:	8b 45 08             	mov    0x8(%ebp),%eax
 80490fd:	8b 00                	mov    (%eax),%eax
 80490ff:	85 c0                	test   %eax,%eax
 8049101:	75 24                	jne    8049127 <VectorExpand+0x70>
 8049103:	c7 44 24 0c 77 9f 04 	movl   $0x8049f77,0xc(%esp)
 804910a:	08 
 804910b:	c7 44 24 08 3e 00 00 	movl   $0x3e,0x8(%esp)
 8049112:	00 
 8049113:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 804911a:	08 
 804911b:	c7 04 24 84 9f 04 08 	movl   $0x8049f84,(%esp)
 8049122:	e8 f1 f5 ff ff       	call   8048718 <__assert_fail@plt>
 8049127:	c9                   	leave  
 8049128:	c3                   	ret    

08049129 <VectorInsert>:
 8049129:	55                   	push   %ebp
 804912a:	89 e5                	mov    %esp,%ebp
 804912c:	57                   	push   %edi
 804912d:	56                   	push   %esi
 804912e:	83 ec 20             	sub    $0x20,%esp
 8049131:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049135:	78 0b                	js     8049142 <VectorInsert+0x19>
 8049137:	8b 45 08             	mov    0x8(%ebp),%eax
 804913a:	8b 40 08             	mov    0x8(%eax),%eax
 804913d:	3b 45 10             	cmp    0x10(%ebp),%eax
 8049140:	7d 24                	jge    8049166 <VectorInsert+0x3d>
 8049142:	c7 44 24 0c 8d 9f 04 	movl   $0x8049f8d,0xc(%esp)
 8049149:	08 
 804914a:	c7 44 24 08 47 00 00 	movl   $0x47,0x8(%esp)
 8049151:	00 
 8049152:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8049159:	08 
 804915a:	c7 04 24 9c 9f 04 08 	movl   $0x8049f9c,(%esp)
 8049161:	e8 b2 f5 ff ff       	call   8048718 <__assert_fail@plt>
 8049166:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804916a:	75 24                	jne    8049190 <VectorInsert+0x67>
 804916c:	c7 44 24 0c 8d 9f 04 	movl   $0x8049f8d,0xc(%esp)
 8049173:	08 
 8049174:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)
 804917b:	00 
 804917c:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 8049183:	08 
 8049184:	c7 04 24 5f 9f 04 08 	movl   $0x8049f5f,(%esp)
 804918b:	e8 88 f5 ff ff       	call   8048718 <__assert_fail@plt>
 8049190:	8b 45 08             	mov    0x8(%ebp),%eax
 8049193:	8b 50 08             	mov    0x8(%eax),%edx
 8049196:	8b 45 08             	mov    0x8(%ebp),%eax
 8049199:	8b 40 0c             	mov    0xc(%eax),%eax
 804919c:	39 c2                	cmp    %eax,%edx
 804919e:	75 0b                	jne    80491ab <VectorInsert+0x82>
 80491a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80491a3:	89 04 24             	mov    %eax,(%esp)
 80491a6:	e8 0c ff ff ff       	call   80490b7 <VectorExpand>
 80491ab:	8b 45 08             	mov    0x8(%ebp),%eax
 80491ae:	8b 50 04             	mov    0x4(%eax),%edx
 80491b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80491b4:	8b 08                	mov    (%eax),%ecx
 80491b6:	89 54 24 08          	mov    %edx,0x8(%esp)
 80491ba:	8b 45 10             	mov    0x10(%ebp),%eax
 80491bd:	89 44 24 04          	mov    %eax,0x4(%esp)
 80491c1:	89 0c 24             	mov    %ecx,(%esp)
 80491c4:	e8 aa fd ff ff       	call   8048f73 <NthElement>
 80491c9:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80491cc:	8b 45 08             	mov    0x8(%ebp),%eax
 80491cf:	8b 50 04             	mov    0x4(%eax),%edx
 80491d2:	8b 4d 10             	mov    0x10(%ebp),%ecx
 80491d5:	41                   	inc    %ecx
 80491d6:	8b 45 08             	mov    0x8(%ebp),%eax
 80491d9:	8b 00                	mov    (%eax),%eax
 80491db:	89 54 24 08          	mov    %edx,0x8(%esp)
 80491df:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80491e3:	89 04 24             	mov    %eax,(%esp)
 80491e6:	e8 88 fd ff ff       	call   8048f73 <NthElement>
 80491eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80491ee:	8b 45 08             	mov    0x8(%ebp),%eax
 80491f1:	8b 40 08             	mov    0x8(%eax),%eax
 80491f4:	89 c2                	mov    %eax,%edx
 80491f6:	2b 55 10             	sub    0x10(%ebp),%edx
 80491f9:	8b 45 08             	mov    0x8(%ebp),%eax
 80491fc:	8b 40 04             	mov    0x4(%eax),%eax
 80491ff:	0f af c2             	imul   %edx,%eax
 8049202:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049205:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049208:	89 44 24 08          	mov    %eax,0x8(%esp)
 804920c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804920f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049213:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049216:	89 04 24             	mov    %eax,(%esp)
 8049219:	e8 2a f5 ff ff       	call   8048748 <memmove@plt>
 804921e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049221:	8b 40 04             	mov    0x4(%eax),%eax
 8049224:	89 c1                	mov    %eax,%ecx
 8049226:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049229:	8b 55 0c             	mov    0xc(%ebp),%edx
 804922c:	89 c7                	mov    %eax,%edi
 804922e:	89 d6                	mov    %edx,%esi
 8049230:	fc                   	cld    
 8049231:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
 8049233:	8b 45 08             	mov    0x8(%ebp),%eax
 8049236:	8b 40 08             	mov    0x8(%eax),%eax
 8049239:	8d 50 01             	lea    0x1(%eax),%edx
 804923c:	8b 45 08             	mov    0x8(%ebp),%eax
 804923f:	89 50 08             	mov    %edx,0x8(%eax)
 8049242:	83 c4 20             	add    $0x20,%esp
 8049245:	5e                   	pop    %esi
 8049246:	5f                   	pop    %edi
 8049247:	5d                   	pop    %ebp
 8049248:	c3                   	ret    

08049249 <VectorAppend>:
 8049249:	55                   	push   %ebp
 804924a:	89 e5                	mov    %esp,%ebp
 804924c:	83 ec 18             	sub    $0x18,%esp
 804924f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049252:	8b 40 08             	mov    0x8(%eax),%eax
 8049255:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049259:	8b 45 0c             	mov    0xc(%ebp),%eax
 804925c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049260:	8b 45 08             	mov    0x8(%ebp),%eax
 8049263:	89 04 24             	mov    %eax,(%esp)
 8049266:	e8 be fe ff ff       	call   8049129 <VectorInsert>
 804926b:	c9                   	leave  
 804926c:	c3                   	ret    

0804926d <VectorDelete>:
 804926d:	55                   	push   %ebp
 804926e:	89 e5                	mov    %esp,%ebp
 8049270:	83 ec 28             	sub    $0x28,%esp
 8049273:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049277:	78 0b                	js     8049284 <VectorDelete+0x17>
 8049279:	8b 45 08             	mov    0x8(%ebp),%eax
 804927c:	8b 40 08             	mov    0x8(%eax),%eax
 804927f:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8049282:	7f 24                	jg     80492a8 <VectorDelete+0x3b>
 8049284:	c7 44 24 0c ce 9f 04 	movl   $0x8049fce,0xc(%esp)
 804928b:	08 
 804928c:	c7 44 24 08 5d 00 00 	movl   $0x5d,0x8(%esp)
 8049293:	00 
 8049294:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 804929b:	08 
 804929c:	c7 04 24 20 9f 04 08 	movl   $0x8049f20,(%esp)
 80492a3:	e8 70 f4 ff ff       	call   8048718 <__assert_fail@plt>
 80492a8:	8b 45 08             	mov    0x8(%ebp),%eax
 80492ab:	8b 50 04             	mov    0x4(%eax),%edx
 80492ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80492b1:	8b 08                	mov    (%eax),%ecx
 80492b3:	89 54 24 08          	mov    %edx,0x8(%esp)
 80492b7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80492ba:	89 44 24 04          	mov    %eax,0x4(%esp)
 80492be:	89 0c 24             	mov    %ecx,(%esp)
 80492c1:	e8 ad fc ff ff       	call   8048f73 <NthElement>
 80492c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80492c9:	8b 45 08             	mov    0x8(%ebp),%eax
 80492cc:	8b 50 04             	mov    0x4(%eax),%edx
 80492cf:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 80492d2:	41                   	inc    %ecx
 80492d3:	8b 45 08             	mov    0x8(%ebp),%eax
 80492d6:	8b 00                	mov    (%eax),%eax
 80492d8:	89 54 24 08          	mov    %edx,0x8(%esp)
 80492dc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80492e0:	89 04 24             	mov    %eax,(%esp)
 80492e3:	e8 8b fc ff ff       	call   8048f73 <NthElement>
 80492e8:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80492eb:	8b 45 08             	mov    0x8(%ebp),%eax
 80492ee:	8b 40 14             	mov    0x14(%eax),%eax
 80492f1:	85 c0                	test   %eax,%eax
 80492f3:	74 0e                	je     8049303 <VectorDelete+0x96>
 80492f5:	8b 45 08             	mov    0x8(%ebp),%eax
 80492f8:	8b 50 14             	mov    0x14(%eax),%edx
 80492fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80492fe:	89 04 24             	mov    %eax,(%esp)
 8049301:	ff d2                	call   *%edx
 8049303:	8b 45 08             	mov    0x8(%ebp),%eax
 8049306:	8b 40 08             	mov    0x8(%eax),%eax
 8049309:	8d 50 ff             	lea    -0x1(%eax),%edx
 804930c:	8b 45 08             	mov    0x8(%ebp),%eax
 804930f:	89 50 08             	mov    %edx,0x8(%eax)
 8049312:	8b 45 08             	mov    0x8(%ebp),%eax
 8049315:	8b 40 08             	mov    0x8(%eax),%eax
 8049318:	89 c2                	mov    %eax,%edx
 804931a:	2b 55 0c             	sub    0xc(%ebp),%edx
 804931d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049320:	8b 40 04             	mov    0x4(%eax),%eax
 8049323:	0f af c2             	imul   %edx,%eax
 8049326:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049329:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804932c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049330:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049333:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049337:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804933a:	89 04 24             	mov    %eax,(%esp)
 804933d:	e8 06 f4 ff ff       	call   8048748 <memmove@plt>
 8049342:	c9                   	leave  
 8049343:	c3                   	ret    

08049344 <VectorSort>:
 8049344:	55                   	push   %ebp
 8049345:	89 e5                	mov    %esp,%ebp
 8049347:	53                   	push   %ebx
 8049348:	83 ec 14             	sub    $0x14,%esp
 804934b:	8b 45 08             	mov    0x8(%ebp),%eax
 804934e:	8b 40 04             	mov    0x4(%eax),%eax
 8049351:	89 c1                	mov    %eax,%ecx
 8049353:	8b 45 08             	mov    0x8(%ebp),%eax
 8049356:	8b 40 08             	mov    0x8(%eax),%eax
 8049359:	89 c3                	mov    %eax,%ebx
 804935b:	8b 45 08             	mov    0x8(%ebp),%eax
 804935e:	8b 10                	mov    (%eax),%edx
 8049360:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049363:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049367:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804936b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804936f:	89 14 24             	mov    %edx,(%esp)
 8049372:	e8 01 f4 ff ff       	call   8048778 <qsort@plt>
 8049377:	83 c4 14             	add    $0x14,%esp
 804937a:	5b                   	pop    %ebx
 804937b:	5d                   	pop    %ebp
 804937c:	c3                   	ret    

0804937d <VectorMap>:
 804937d:	55                   	push   %ebp
 804937e:	89 e5                	mov    %esp,%ebp
 8049380:	83 ec 28             	sub    $0x28,%esp
 8049383:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049387:	75 24                	jne    80493ad <VectorMap+0x30>
 8049389:	c7 44 24 0c db 9f 04 	movl   $0x8049fdb,0xc(%esp)
 8049390:	08 
 8049391:	c7 44 24 08 6e 00 00 	movl   $0x6e,0x8(%esp)
 8049398:	00 
 8049399:	c7 44 24 04 ce 9e 04 	movl   $0x8049ece,0x4(%esp)
 80493a0:	08 
 80493a1:	c7 04 24 e5 9f 04 08 	movl   $0x8049fe5,(%esp)
 80493a8:	e8 6b f3 ff ff       	call   8048718 <__assert_fail@plt>
 80493ad:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80493b4:	eb 34                	jmp    80493ea <VectorMap+0x6d>
 80493b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80493b9:	8b 50 04             	mov    0x4(%eax),%edx
 80493bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80493bf:	8b 08                	mov    (%eax),%ecx
 80493c1:	89 54 24 08          	mov    %edx,0x8(%esp)
 80493c5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80493cc:	89 0c 24             	mov    %ecx,(%esp)
 80493cf:	e8 9f fb ff ff       	call   8048f73 <NthElement>
 80493d4:	89 c2                	mov    %eax,%edx
 80493d6:	8b 45 10             	mov    0x10(%ebp),%eax
 80493d9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80493dd:	89 14 24             	mov    %edx,(%esp)
 80493e0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493e3:	ff d0                	call   *%eax
 80493e5:	8d 45 fc             	lea    -0x4(%ebp),%eax
 80493e8:	ff 00                	incl   (%eax)
 80493ea:	8b 45 08             	mov    0x8(%ebp),%eax
 80493ed:	8b 40 08             	mov    0x8(%eax),%eax
 80493f0:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 80493f3:	7f c1                	jg     80493b6 <VectorMap+0x39>
 80493f5:	c9                   	leave  
 80493f6:	c3                   	ret    

080493f7 <lsearch>:
 80493f7:	55                   	push   %ebp
 80493f8:	89 e5                	mov    %esp,%ebp
 80493fa:	83 ec 28             	sub    $0x28,%esp
 80493fd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8049404:	eb 3f                	jmp    8049445 <lsearch+0x4e>
 8049406:	8b 45 14             	mov    0x14(%ebp),%eax
 8049409:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804940c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049410:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049414:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049417:	89 04 24             	mov    %eax,(%esp)
 804941a:	e8 54 fb ff ff       	call   8048f73 <NthElement>
 804941f:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049422:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049425:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049429:	8b 45 08             	mov    0x8(%ebp),%eax
 804942c:	89 04 24             	mov    %eax,(%esp)
 804942f:	8b 45 18             	mov    0x18(%ebp),%eax
 8049432:	ff d0                	call   *%eax
 8049434:	85 c0                	test   %eax,%eax
 8049436:	75 08                	jne    8049440 <lsearch+0x49>
 8049438:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804943b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804943e:	eb 14                	jmp    8049454 <lsearch+0x5d>
 8049440:	8d 45 f8             	lea    -0x8(%ebp),%eax
 8049443:	ff 00                	incl   (%eax)
 8049445:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049448:	3b 45 10             	cmp    0x10(%ebp),%eax
 804944b:	72 b9                	jb     8049406 <lsearch+0xf>
 804944d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8049454:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049457:	c9                   	leave  
 8049458:	c3                   	ret    

08049459 <VectorSearch>:
 8049459:	55                   	push   %ebp
 804945a:	89 e5                	mov    %esp,%ebp
 804945c:	56                   	push   %esi
 804945d:	53                   	push   %ebx
 804945e:	83 ec 30             	sub    $0x30,%esp
 8049461:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 8049465:	74 09                	je     8049470 <VectorSearch+0x17>
 8049467:	c7 45 e0 28 88 04 08 	movl   $0x8048828,-0x20(%ebp)
 804946e:	eb 07                	jmp    8049477 <VectorSearch+0x1e>
 8049470:	c7 45 e0 f7 93 04 08 	movl   $0x80493f7,-0x20(%ebp)
 8049477:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804947a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804947d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049480:	8b 40 04             	mov    0x4(%eax),%eax
 8049483:	89 c3                	mov    %eax,%ebx
 8049485:	8b 45 08             	mov    0x8(%ebp),%eax
 8049488:	8b 40 08             	mov    0x8(%eax),%eax
 804948b:	2b 45 14             	sub    0x14(%ebp),%eax
 804948e:	89 c6                	mov    %eax,%esi
 8049490:	8b 45 08             	mov    0x8(%ebp),%eax
 8049493:	8b 50 04             	mov    0x4(%eax),%edx
 8049496:	8b 45 08             	mov    0x8(%ebp),%eax
 8049499:	8b 08                	mov    (%eax),%ecx
 804949b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804949f:	8b 45 14             	mov    0x14(%ebp),%eax
 80494a2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80494a6:	89 0c 24             	mov    %ecx,(%esp)
 80494a9:	e8 c5 fa ff ff       	call   8048f73 <NthElement>
 80494ae:	89 c2                	mov    %eax,%edx
 80494b0:	8b 45 10             	mov    0x10(%ebp),%eax
 80494b3:	89 44 24 10          	mov    %eax,0x10(%esp)
 80494b7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 80494bb:	89 74 24 08          	mov    %esi,0x8(%esp)
 80494bf:	89 54 24 04          	mov    %edx,0x4(%esp)
 80494c3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494c6:	89 04 24             	mov    %eax,(%esp)
 80494c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80494cc:	ff d0                	call   *%eax
 80494ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80494d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 80494d5:	75 0a                	jne    80494e1 <VectorSearch+0x88>
 80494d7:	a1 fc 9f 04 08       	mov    0x8049ffc,%eax
 80494dc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80494df:	eb 22                	jmp    8049503 <VectorSearch+0xaa>
 80494e1:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80494e4:	8b 45 08             	mov    0x8(%ebp),%eax
 80494e7:	8b 00                	mov    (%eax),%eax
 80494e9:	29 c2                	sub    %eax,%edx
 80494eb:	8b 45 08             	mov    0x8(%ebp),%eax
 80494ee:	8b 40 04             	mov    0x4(%eax),%eax
 80494f1:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80494f4:	89 d0                	mov    %edx,%eax
 80494f6:	99                   	cltd   
 80494f7:	f7 7d dc             	idivl  -0x24(%ebp)
 80494fa:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80494fd:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049500:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8049503:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049506:	83 c4 30             	add    $0x30,%esp
 8049509:	5b                   	pop    %ebx
 804950a:	5e                   	pop    %esi
 804950b:	5d                   	pop    %ebp
 804950c:	c3                   	ret    
 804950d:	90                   	nop
 804950e:	90                   	nop
 804950f:	90                   	nop

08049510 <HashSetNew>:
 8049510:	55                   	push   %ebp
 8049511:	89 e5                	mov    %esp,%ebp
 8049513:	83 ec 28             	sub    $0x28,%esp
 8049516:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804951a:	7f 24                	jg     8049540 <HashSetNew+0x30>
 804951c:	c7 44 24 0c 00 a0 04 	movl   $0x804a000,0xc(%esp)
 8049523:	08 
 8049524:	c7 44 24 08 0b 00 00 	movl   $0xb,0x8(%esp)
 804952b:	00 
 804952c:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 8049533:	08 
 8049534:	c7 04 24 15 a0 04 08 	movl   $0x804a015,(%esp)
 804953b:	e8 d8 f1 ff ff       	call   8048718 <__assert_fail@plt>
 8049540:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049544:	7f 24                	jg     804956a <HashSetNew+0x5a>
 8049546:	c7 44 24 0c 00 a0 04 	movl   $0x804a000,0xc(%esp)
 804954d:	08 
 804954e:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%esp)
 8049555:	00 
 8049556:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 804955d:	08 
 804955e:	c7 04 24 22 a0 04 08 	movl   $0x804a022,(%esp)
 8049565:	e8 ae f1 ff ff       	call   8048718 <__assert_fail@plt>
 804956a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 804956e:	75 24                	jne    8049594 <HashSetNew+0x84>
 8049570:	c7 44 24 0c 00 a0 04 	movl   $0x804a000,0xc(%esp)
 8049577:	08 
 8049578:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)
 804957f:	00 
 8049580:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 8049587:	08 
 8049588:	c7 04 24 31 a0 04 08 	movl   $0x804a031,(%esp)
 804958f:	e8 84 f1 ff ff       	call   8048718 <__assert_fail@plt>
 8049594:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 8049598:	75 24                	jne    80495be <HashSetNew+0xae>
 804959a:	c7 44 24 0c 00 a0 04 	movl   $0x804a000,0xc(%esp)
 80495a1:	08 
 80495a2:	c7 44 24 08 0e 00 00 	movl   $0xe,0x8(%esp)
 80495a9:	00 
 80495aa:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 80495b1:	08 
 80495b2:	c7 04 24 47 a0 04 08 	movl   $0x804a047,(%esp)
 80495b9:	e8 5a f1 ff ff       	call   8048718 <__assert_fail@plt>
 80495be:	8b 55 10             	mov    0x10(%ebp),%edx
 80495c1:	89 d0                	mov    %edx,%eax
 80495c3:	01 c0                	add    %eax,%eax
 80495c5:	01 d0                	add    %edx,%eax
 80495c7:	c1 e0 03             	shl    $0x3,%eax
 80495ca:	89 04 24             	mov    %eax,(%esp)
 80495cd:	e8 66 f1 ff ff       	call   8048738 <malloc@plt>
 80495d2:	89 c2                	mov    %eax,%edx
 80495d4:	8b 45 08             	mov    0x8(%ebp),%eax
 80495d7:	89 10                	mov    %edx,(%eax)
 80495d9:	8b 45 08             	mov    0x8(%ebp),%eax
 80495dc:	8b 00                	mov    (%eax),%eax
 80495de:	85 c0                	test   %eax,%eax
 80495e0:	75 24                	jne    8049606 <HashSetNew+0xf6>
 80495e2:	c7 44 24 0c 00 a0 04 	movl   $0x804a000,0xc(%esp)
 80495e9:	08 
 80495ea:	c7 44 24 08 11 00 00 	movl   $0x11,0x8(%esp)
 80495f1:	00 
 80495f2:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 80495f9:	08 
 80495fa:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8049601:	e8 12 f1 ff ff       	call   8048718 <__assert_fail@plt>
 8049606:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804960d:	eb 37                	jmp    8049646 <HashSetNew+0x136>
 804960f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049612:	8b 08                	mov    (%eax),%ecx
 8049614:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049617:	89 d0                	mov    %edx,%eax
 8049619:	01 c0                	add    %eax,%eax
 804961b:	01 d0                	add    %edx,%eax
 804961d:	c1 e0 03             	shl    $0x3,%eax
 8049620:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 8049623:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 804962a:	00 
 804962b:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804962e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049632:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049635:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049639:	89 14 24             	mov    %edx,(%esp)
 804963c:	e8 ef f7 ff ff       	call   8048e30 <VectorNew>
 8049641:	8d 45 fc             	lea    -0x4(%ebp),%eax
 8049644:	ff 00                	incl   (%eax)
 8049646:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049649:	3b 45 10             	cmp    0x10(%ebp),%eax
 804964c:	7c c1                	jl     804960f <HashSetNew+0xff>
 804964e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049651:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 8049658:	8b 55 08             	mov    0x8(%ebp),%edx
 804965b:	8b 45 10             	mov    0x10(%ebp),%eax
 804965e:	89 42 04             	mov    %eax,0x4(%edx)
 8049661:	8b 55 08             	mov    0x8(%ebp),%edx
 8049664:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049667:	89 42 08             	mov    %eax,0x8(%edx)
 804966a:	8b 55 08             	mov    0x8(%ebp),%edx
 804966d:	8b 45 14             	mov    0x14(%ebp),%eax
 8049670:	89 42 10             	mov    %eax,0x10(%edx)
 8049673:	8b 55 08             	mov    0x8(%ebp),%edx
 8049676:	8b 45 18             	mov    0x18(%ebp),%eax
 8049679:	89 42 14             	mov    %eax,0x14(%edx)
 804967c:	c9                   	leave  
 804967d:	c3                   	ret    

0804967e <HashSetDispose>:
 804967e:	55                   	push   %ebp
 804967f:	89 e5                	mov    %esp,%ebp
 8049681:	83 ec 18             	sub    $0x18,%esp
 8049684:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804968b:	eb 21                	jmp    80496ae <HashSetDispose+0x30>
 804968d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049690:	8b 08                	mov    (%eax),%ecx
 8049692:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049695:	89 d0                	mov    %edx,%eax
 8049697:	01 c0                	add    %eax,%eax
 8049699:	01 d0                	add    %edx,%eax
 804969b:	c1 e0 03             	shl    $0x3,%eax
 804969e:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 80496a1:	89 04 24             	mov    %eax,(%esp)
 80496a4:	e8 65 f8 ff ff       	call   8048f0e <VectorDispose>
 80496a9:	8d 45 fc             	lea    -0x4(%ebp),%eax
 80496ac:	ff 00                	incl   (%eax)
 80496ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80496b1:	8b 40 04             	mov    0x4(%eax),%eax
 80496b4:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 80496b7:	7f d4                	jg     804968d <HashSetDispose+0xf>
 80496b9:	8b 45 08             	mov    0x8(%ebp),%eax
 80496bc:	8b 00                	mov    (%eax),%eax
 80496be:	89 04 24             	mov    %eax,(%esp)
 80496c1:	e8 22 f1 ff ff       	call   80487e8 <free@plt>
 80496c6:	c9                   	leave  
 80496c7:	c3                   	ret    

080496c8 <HashSetCount>:
 80496c8:	55                   	push   %ebp
 80496c9:	89 e5                	mov    %esp,%ebp
 80496cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80496ce:	8b 40 0c             	mov    0xc(%eax),%eax
 80496d1:	5d                   	pop    %ebp
 80496d2:	c3                   	ret    

080496d3 <HashSetMap>:
 80496d3:	55                   	push   %ebp
 80496d4:	89 e5                	mov    %esp,%ebp
 80496d6:	83 ec 28             	sub    $0x28,%esp
 80496d9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80496dd:	75 24                	jne    8049703 <HashSetMap+0x30>
 80496df:	c7 44 24 0c 7a a0 04 	movl   $0x804a07a,0xc(%esp)
 80496e6:	08 
 80496e7:	c7 44 24 08 29 00 00 	movl   $0x29,0x8(%esp)
 80496ee:	00 
 80496ef:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 80496f6:	08 
 80496f7:	c7 04 24 85 a0 04 08 	movl   $0x804a085,(%esp)
 80496fe:	e8 15 f0 ff ff       	call   8048718 <__assert_fail@plt>
 8049703:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804970a:	eb 2f                	jmp    804973b <HashSetMap+0x68>
 804970c:	8b 45 08             	mov    0x8(%ebp),%eax
 804970f:	8b 08                	mov    (%eax),%ecx
 8049711:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8049714:	89 d0                	mov    %edx,%eax
 8049716:	01 c0                	add    %eax,%eax
 8049718:	01 d0                	add    %edx,%eax
 804971a:	c1 e0 03             	shl    $0x3,%eax
 804971d:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 8049720:	8b 45 10             	mov    0x10(%ebp),%eax
 8049723:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049727:	8b 45 0c             	mov    0xc(%ebp),%eax
 804972a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804972e:	89 14 24             	mov    %edx,(%esp)
 8049731:	e8 47 fc ff ff       	call   804937d <VectorMap>
 8049736:	8d 45 fc             	lea    -0x4(%ebp),%eax
 8049739:	ff 00                	incl   (%eax)
 804973b:	8b 45 08             	mov    0x8(%ebp),%eax
 804973e:	8b 40 04             	mov    0x4(%eax),%eax
 8049741:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 8049744:	7f c6                	jg     804970c <HashSetMap+0x39>
 8049746:	c9                   	leave  
 8049747:	c3                   	ret    

08049748 <HashSetEnter>:
 8049748:	55                   	push   %ebp
 8049749:	89 e5                	mov    %esp,%ebp
 804974b:	53                   	push   %ebx
 804974c:	83 ec 24             	sub    $0x24,%esp
 804974f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049752:	8b 50 10             	mov    0x10(%eax),%edx
 8049755:	8b 45 08             	mov    0x8(%ebp),%eax
 8049758:	8b 40 04             	mov    0x4(%eax),%eax
 804975b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804975f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049762:	89 04 24             	mov    %eax,(%esp)
 8049765:	ff d2                	call   *%edx
 8049767:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804976a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804976e:	78 0b                	js     804977b <HashSetEnter+0x33>
 8049770:	8b 45 08             	mov    0x8(%ebp),%eax
 8049773:	8b 40 04             	mov    0x4(%eax),%eax
 8049776:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8049779:	7f 24                	jg     804979f <HashSetEnter+0x57>
 804977b:	c7 44 24 0c 9a a0 04 	movl   $0x804a09a,0xc(%esp)
 8049782:	08 
 8049783:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)
 804978a:	00 
 804978b:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 8049792:	08 
 8049793:	c7 04 24 a8 a0 04 08 	movl   $0x804a0a8,(%esp)
 804979a:	e8 79 ef ff ff       	call   8048718 <__assert_fail@plt>
 804979f:	8b 45 08             	mov    0x8(%ebp),%eax
 80497a2:	8b 58 14             	mov    0x14(%eax),%ebx
 80497a5:	8b 45 08             	mov    0x8(%ebp),%eax
 80497a8:	8b 08                	mov    (%eax),%ecx
 80497aa:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80497ad:	89 d0                	mov    %edx,%eax
 80497af:	01 c0                	add    %eax,%eax
 80497b1:	01 d0                	add    %edx,%eax
 80497b3:	c1 e0 03             	shl    $0x3,%eax
 80497b6:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 80497b9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80497c0:	00 
 80497c1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80497c8:	00 
 80497c9:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 80497cd:	8b 45 0c             	mov    0xc(%ebp),%eax
 80497d0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80497d4:	89 14 24             	mov    %edx,(%esp)
 80497d7:	e8 7d fc ff ff       	call   8049459 <VectorSearch>
 80497dc:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80497df:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 80497e3:	79 34                	jns    8049819 <HashSetEnter+0xd1>
 80497e5:	8b 45 08             	mov    0x8(%ebp),%eax
 80497e8:	8b 08                	mov    (%eax),%ecx
 80497ea:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80497ed:	89 d0                	mov    %edx,%eax
 80497ef:	01 c0                	add    %eax,%eax
 80497f1:	01 d0                	add    %edx,%eax
 80497f3:	c1 e0 03             	shl    $0x3,%eax
 80497f6:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 80497f9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80497fc:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049800:	89 14 24             	mov    %edx,(%esp)
 8049803:	e8 41 fa ff ff       	call   8049249 <VectorAppend>
 8049808:	8b 45 08             	mov    0x8(%ebp),%eax
 804980b:	8b 40 0c             	mov    0xc(%eax),%eax
 804980e:	8d 50 01             	lea    0x1(%eax),%edx
 8049811:	8b 45 08             	mov    0x8(%ebp),%eax
 8049814:	89 50 0c             	mov    %edx,0xc(%eax)
 8049817:	eb 2a                	jmp    8049843 <HashSetEnter+0xfb>
 8049819:	8b 45 08             	mov    0x8(%ebp),%eax
 804981c:	8b 08                	mov    (%eax),%ecx
 804981e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049821:	89 d0                	mov    %edx,%eax
 8049823:	01 c0                	add    %eax,%eax
 8049825:	01 d0                	add    %edx,%eax
 8049827:	c1 e0 03             	shl    $0x3,%eax
 804982a:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 804982d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049830:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049834:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049837:	89 44 24 04          	mov    %eax,0x4(%esp)
 804983b:	89 14 24             	mov    %edx,(%esp)
 804983e:	e8 9f f7 ff ff       	call   8048fe2 <VectorReplace>
 8049843:	83 c4 24             	add    $0x24,%esp
 8049846:	5b                   	pop    %ebx
 8049847:	5d                   	pop    %ebp
 8049848:	c3                   	ret    

08049849 <HashSetLookup>:
 8049849:	55                   	push   %ebp
 804984a:	89 e5                	mov    %esp,%ebp
 804984c:	53                   	push   %ebx
 804984d:	83 ec 34             	sub    $0x34,%esp
 8049850:	8b 45 08             	mov    0x8(%ebp),%eax
 8049853:	8b 50 10             	mov    0x10(%eax),%edx
 8049856:	8b 45 08             	mov    0x8(%ebp),%eax
 8049859:	8b 40 04             	mov    0x4(%eax),%eax
 804985c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049860:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049863:	89 04 24             	mov    %eax,(%esp)
 8049866:	ff d2                	call   *%edx
 8049868:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804986b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804986f:	78 0b                	js     804987c <HashSetLookup+0x33>
 8049871:	8b 45 08             	mov    0x8(%ebp),%eax
 8049874:	8b 40 04             	mov    0x4(%eax),%eax
 8049877:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804987a:	7f 24                	jg     80498a0 <HashSetLookup+0x57>
 804987c:	c7 44 24 0c d6 a0 04 	movl   $0x804a0d6,0xc(%esp)
 8049883:	08 
 8049884:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)
 804988b:	00 
 804988c:	c7 44 24 04 0b a0 04 	movl   $0x804a00b,0x4(%esp)
 8049893:	08 
 8049894:	c7 04 24 a8 a0 04 08 	movl   $0x804a0a8,(%esp)
 804989b:	e8 78 ee ff ff       	call   8048718 <__assert_fail@plt>
 80498a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80498a3:	8b 58 14             	mov    0x14(%eax),%ebx
 80498a6:	8b 45 08             	mov    0x8(%ebp),%eax
 80498a9:	8b 08                	mov    (%eax),%ecx
 80498ab:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80498ae:	89 d0                	mov    %edx,%eax
 80498b0:	01 c0                	add    %eax,%eax
 80498b2:	01 d0                	add    %edx,%eax
 80498b4:	c1 e0 03             	shl    $0x3,%eax
 80498b7:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 80498ba:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80498c1:	00 
 80498c2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80498c9:	00 
 80498ca:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 80498ce:	8b 45 0c             	mov    0xc(%ebp),%eax
 80498d1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80498d5:	89 14 24             	mov    %edx,(%esp)
 80498d8:	e8 7c fb ff ff       	call   8049459 <VectorSearch>
 80498dd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80498e0:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 80498e4:	79 09                	jns    80498ef <HashSetLookup+0xa6>
 80498e6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 80498ed:	eb 26                	jmp    8049915 <HashSetLookup+0xcc>
 80498ef:	8b 45 08             	mov    0x8(%ebp),%eax
 80498f2:	8b 08                	mov    (%eax),%ecx
 80498f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80498f7:	89 d0                	mov    %edx,%eax
 80498f9:	01 c0                	add    %eax,%eax
 80498fb:	01 d0                	add    %edx,%eax
 80498fd:	c1 e0 03             	shl    $0x3,%eax
 8049900:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 8049903:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049906:	89 44 24 04          	mov    %eax,0x4(%esp)
 804990a:	89 14 24             	mov    %edx,(%esp)
 804990d:	e8 75 f6 ff ff       	call   8048f87 <VectorNth>
 8049912:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049915:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049918:	83 c4 34             	add    $0x34,%esp
 804991b:	5b                   	pop    %ebx
 804991c:	5d                   	pop    %ebp
 804991d:	c3                   	ret    
 804991e:	90                   	nop
 804991f:	90                   	nop

08049920 <STNew>:
 8049920:	55                   	push   %ebp
 8049921:	89 e5                	mov    %esp,%ebp
 8049923:	83 ec 18             	sub    $0x18,%esp
 8049926:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804992a:	75 24                	jne    8049950 <STNew+0x30>
 804992c:	c7 44 24 0c 00 a1 04 	movl   $0x804a100,0xc(%esp)
 8049933:	08 
 8049934:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 804993b:	00 
 804993c:	c7 44 24 04 06 a1 04 	movl   $0x804a106,0x4(%esp)
 8049943:	08 
 8049944:	c7 04 24 18 a1 04 08 	movl   $0x804a118,(%esp)
 804994b:	e8 c8 ed ff ff       	call   8048718 <__assert_fail@plt>
 8049950:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049954:	75 24                	jne    804997a <STNew+0x5a>
 8049956:	c7 44 24 0c 00 a1 04 	movl   $0x804a100,0xc(%esp)
 804995d:	08 
 804995e:	c7 44 24 08 0b 00 00 	movl   $0xb,0x8(%esp)
 8049965:	00 
 8049966:	c7 44 24 04 06 a1 04 	movl   $0x804a106,0x4(%esp)
 804996d:	08 
 804996e:	c7 04 24 2e a1 04 08 	movl   $0x804a12e,(%esp)
 8049975:	e8 9e ed ff ff       	call   8048718 <__assert_fail@plt>
 804997a:	8b 45 10             	mov    0x10(%ebp),%eax
 804997d:	0f b6 00             	movzbl (%eax),%eax
 8049980:	84 c0                	test   %al,%al
 8049982:	75 24                	jne    80499a8 <STNew+0x88>
 8049984:	c7 44 24 0c 00 a1 04 	movl   $0x804a100,0xc(%esp)
 804998b:	08 
 804998c:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%esp)
 8049993:	00 
 8049994:	c7 44 24 04 06 a1 04 	movl   $0x804a106,0x4(%esp)
 804999b:	08 
 804999c:	c7 04 24 48 a1 04 08 	movl   $0x804a148,(%esp)
 80499a3:	e8 70 ed ff ff       	call   8048718 <__assert_fail@plt>
 80499a8:	8b 55 08             	mov    0x8(%ebp),%edx
 80499ab:	8b 45 0c             	mov    0xc(%ebp),%eax
 80499ae:	89 02                	mov    %eax,(%edx)
 80499b0:	8b 55 08             	mov    0x8(%ebp),%edx
 80499b3:	8b 45 14             	mov    0x14(%ebp),%eax
 80499b6:	89 42 08             	mov    %eax,0x8(%edx)
 80499b9:	8b 45 10             	mov    0x10(%ebp),%eax
 80499bc:	89 04 24             	mov    %eax,(%esp)
 80499bf:	e8 14 ed ff ff       	call   80486d8 <strdup@plt>
 80499c4:	89 c2                	mov    %eax,%edx
 80499c6:	8b 45 08             	mov    0x8(%ebp),%eax
 80499c9:	89 50 04             	mov    %edx,0x4(%eax)
 80499cc:	c9                   	leave  
 80499cd:	c3                   	ret    

080499ce <STDispose>:
 80499ce:	55                   	push   %ebp
 80499cf:	89 e5                	mov    %esp,%ebp
 80499d1:	83 ec 08             	sub    $0x8,%esp
 80499d4:	8b 45 08             	mov    0x8(%ebp),%eax
 80499d7:	8b 40 04             	mov    0x4(%eax),%eax
 80499da:	89 04 24             	mov    %eax,(%esp)
 80499dd:	e8 06 ee ff ff       	call   80487e8 <free@plt>
 80499e2:	c9                   	leave  
 80499e3:	c3                   	ret    

080499e4 <STNextToken>:
 80499e4:	55                   	push   %ebp
 80499e5:	89 e5                	mov    %esp,%ebp
 80499e7:	83 ec 18             	sub    $0x18,%esp
 80499ea:	8b 45 08             	mov    0x8(%ebp),%eax
 80499ed:	8b 40 04             	mov    0x4(%eax),%eax
 80499f0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80499f4:	8b 45 10             	mov    0x10(%ebp),%eax
 80499f7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80499fb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80499fe:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049a02:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a05:	89 04 24             	mov    %eax,(%esp)
 8049a08:	e8 02 00 00 00       	call   8049a0f <STNextTokenUsingDifferentDelimiters>
 8049a0d:	c9                   	leave  
 8049a0e:	c3                   	ret    

08049a0f <STNextTokenUsingDifferentDelimiters>:
 8049a0f:	55                   	push   %ebp
 8049a10:	89 e5                	mov    %esp,%ebp
 8049a12:	83 ec 28             	sub    $0x28,%esp
 8049a15:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8049a19:	75 24                	jne    8049a3f <STNextTokenUsingDifferentDelimiters+0x30>
 8049a1b:	c7 44 24 0c 60 a1 04 	movl   $0x804a160,0xc(%esp)
 8049a22:	08 
 8049a23:	c7 44 24 08 22 00 00 	movl   $0x22,0x8(%esp)
 8049a2a:	00 
 8049a2b:	c7 44 24 04 06 a1 04 	movl   $0x804a106,0x4(%esp)
 8049a32:	08 
 8049a33:	c7 04 24 84 a1 04 08 	movl   $0x804a184,(%esp)
 8049a3a:	e8 d9 ec ff ff       	call   8048718 <__assert_fail@plt>
 8049a3f:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
 8049a43:	7f 24                	jg     8049a69 <STNextTokenUsingDifferentDelimiters+0x5a>
 8049a45:	c7 44 24 0c 60 a1 04 	movl   $0x804a160,0xc(%esp)
 8049a4c:	08 
 8049a4d:	c7 44 24 08 23 00 00 	movl   $0x23,0x8(%esp)
 8049a54:	00 
 8049a55:	c7 44 24 04 06 a1 04 	movl   $0x804a106,0x4(%esp)
 8049a5c:	08 
 8049a5d:	c7 04 24 9a a1 04 08 	movl   $0x804a19a,(%esp)
 8049a64:	e8 af ec ff ff       	call   8048718 <__assert_fail@plt>
 8049a69:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a6c:	8b 40 08             	mov    0x8(%eax),%eax
 8049a6f:	85 c0                	test   %eax,%eax
 8049a71:	74 12                	je     8049a85 <STNextTokenUsingDifferentDelimiters+0x76>
 8049a73:	8b 45 14             	mov    0x14(%ebp),%eax
 8049a76:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049a7a:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a7d:	89 04 24             	mov    %eax,(%esp)
 8049a80:	e8 a2 01 00 00       	call   8049c27 <STSkipOver>
 8049a85:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a88:	8b 00                	mov    (%eax),%eax
 8049a8a:	89 04 24             	mov    %eax,(%esp)
 8049a8d:	e8 76 ed ff ff       	call   8048808 <_IO_getc@plt>
 8049a92:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049a95:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
 8049a99:	75 0c                	jne    8049aa7 <STNextTokenUsingDifferentDelimiters+0x98>
 8049a9b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8049aa2:	e9 a6 00 00 00       	jmp    8049b4d <STNextTokenUsingDifferentDelimiters+0x13e>
 8049aa7:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049aaa:	88 c2                	mov    %al,%dl
 8049aac:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049aaf:	88 10                	mov    %dl,(%eax)
 8049ab1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049ab4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049ab8:	8b 45 14             	mov    0x14(%ebp),%eax
 8049abb:	89 04 24             	mov    %eax,(%esp)
 8049abe:	e8 f5 eb ff ff       	call   80486b8 <strchr@plt>
 8049ac3:	85 c0                	test   %eax,%eax
 8049ac5:	74 10                	je     8049ad7 <STNextTokenUsingDifferentDelimiters+0xc8>
 8049ac7:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049aca:	40                   	inc    %eax
 8049acb:	c6 00 00             	movb   $0x0,(%eax)
 8049ace:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 8049ad5:	eb 76                	jmp    8049b4d <STNextTokenUsingDifferentDelimiters+0x13e>
 8049ad7:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)
 8049ade:	eb 54                	jmp    8049b34 <STNextTokenUsingDifferentDelimiters+0x125>
 8049ae0:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ae3:	8b 00                	mov    (%eax),%eax
 8049ae5:	89 04 24             	mov    %eax,(%esp)
 8049ae8:	e8 bb eb ff ff       	call   80486a8 <fgetc@plt>
 8049aed:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049af0:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
 8049af4:	74 47                	je     8049b3d <STNextTokenUsingDifferentDelimiters+0x12e>
 8049af6:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049af9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049afd:	8b 45 14             	mov    0x14(%ebp),%eax
 8049b00:	89 04 24             	mov    %eax,(%esp)
 8049b03:	e8 b0 eb ff ff       	call   80486b8 <strchr@plt>
 8049b08:	85 c0                	test   %eax,%eax
 8049b0a:	74 16                	je     8049b22 <STNextTokenUsingDifferentDelimiters+0x113>
 8049b0c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b0f:	8b 00                	mov    (%eax),%eax
 8049b11:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b15:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049b18:	89 04 24             	mov    %eax,(%esp)
 8049b1b:	e8 a8 eb ff ff       	call   80486c8 <ungetc@plt>
 8049b20:	eb 1b                	jmp    8049b3d <STNextTokenUsingDifferentDelimiters+0x12e>
 8049b22:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049b25:	89 c2                	mov    %eax,%edx
 8049b27:	03 55 0c             	add    0xc(%ebp),%edx
 8049b2a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049b2d:	88 02                	mov    %al,(%edx)
 8049b2f:	8d 45 f8             	lea    -0x8(%ebp),%eax
 8049b32:	ff 00                	incl   (%eax)
 8049b34:	8b 45 10             	mov    0x10(%ebp),%eax
 8049b37:	48                   	dec    %eax
 8049b38:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 8049b3b:	7f a3                	jg     8049ae0 <STNextTokenUsingDifferentDelimiters+0xd1>
 8049b3d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8049b40:	03 45 0c             	add    0xc(%ebp),%eax
 8049b43:	c6 00 00             	movb   $0x0,(%eax)
 8049b46:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 8049b4d:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049b50:	c9                   	leave  
 8049b51:	c3                   	ret    

08049b52 <HaveReasonToStop>:
 8049b52:	55                   	push   %ebp
 8049b53:	89 e5                	mov    %esp,%ebp
 8049b55:	83 ec 28             	sub    $0x28,%esp
 8049b58:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049b5b:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b5f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b62:	89 04 24             	mov    %eax,(%esp)
 8049b65:	e8 4e eb ff ff       	call   80486b8 <strchr@plt>
 8049b6a:	85 c0                	test   %eax,%eax
 8049b6c:	0f 95 c0             	setne  %al
 8049b6f:	0f b6 c0             	movzbl %al,%eax
 8049b72:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049b75:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 8049b79:	74 06                	je     8049b81 <HaveReasonToStop+0x2f>
 8049b7b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049b7f:	74 0c                	je     8049b8d <HaveReasonToStop+0x3b>
 8049b81:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 8049b85:	75 0f                	jne    8049b96 <HaveReasonToStop+0x44>
 8049b87:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049b8b:	74 09                	je     8049b96 <HaveReasonToStop+0x44>
 8049b8d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 8049b94:	eb 07                	jmp    8049b9d <HaveReasonToStop+0x4b>
 8049b96:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8049b9d:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049ba0:	c9                   	leave  
 8049ba1:	c3                   	ret    

08049ba2 <STSkipHelper>:
 8049ba2:	55                   	push   %ebp
 8049ba3:	89 e5                	mov    %esp,%ebp
 8049ba5:	83 ec 28             	sub    $0x28,%esp
 8049ba8:	8b 45 08             	mov    0x8(%ebp),%eax
 8049bab:	8b 00                	mov    (%eax),%eax
 8049bad:	89 04 24             	mov    %eax,(%esp)
 8049bb0:	e8 53 ec ff ff       	call   8048808 <_IO_getc@plt>
 8049bb5:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8049bb8:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
 8049bbc:	75 09                	jne    8049bc7 <STSkipHelper+0x25>
 8049bbe:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)
 8049bc5:	eb 39                	jmp    8049c00 <STSkipHelper+0x5e>
 8049bc7:	8b 45 10             	mov    0x10(%ebp),%eax
 8049bca:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049bce:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049bd1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bd5:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049bd8:	89 04 24             	mov    %eax,(%esp)
 8049bdb:	e8 72 ff ff ff       	call   8049b52 <HaveReasonToStop>
 8049be0:	85 c0                	test   %eax,%eax
 8049be2:	75 02                	jne    8049be6 <STSkipHelper+0x44>
 8049be4:	eb c2                	jmp    8049ba8 <STSkipHelper+0x6>
 8049be6:	8b 45 08             	mov    0x8(%ebp),%eax
 8049be9:	8b 00                	mov    (%eax),%eax
 8049beb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049bef:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049bf2:	89 04 24             	mov    %eax,(%esp)
 8049bf5:	e8 ce ea ff ff       	call   80486c8 <ungetc@plt>
 8049bfa:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8049bfd:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049c00:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8049c03:	c9                   	leave  
 8049c04:	c3                   	ret    

08049c05 <STSkipUntil>:
 8049c05:	55                   	push   %ebp
 8049c06:	89 e5                	mov    %esp,%ebp
 8049c08:	83 ec 18             	sub    $0x18,%esp
 8049c0b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049c12:	00 
 8049c13:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049c16:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c1a:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c1d:	89 04 24             	mov    %eax,(%esp)
 8049c20:	e8 7d ff ff ff       	call   8049ba2 <STSkipHelper>
 8049c25:	c9                   	leave  
 8049c26:	c3                   	ret    

08049c27 <STSkipOver>:
 8049c27:	55                   	push   %ebp
 8049c28:	89 e5                	mov    %esp,%ebp
 8049c2a:	83 ec 18             	sub    $0x18,%esp
 8049c2d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 8049c34:	00 
 8049c35:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049c38:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c3c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c3f:	89 04 24             	mov    %eax,(%esp)
 8049c42:	e8 5b ff ff ff       	call   8049ba2 <STSkipHelper>
 8049c47:	c9                   	leave  
 8049c48:	c3                   	ret    
 8049c49:	90                   	nop
 8049c4a:	90                   	nop
 8049c4b:	90                   	nop

08049c4c <__libc_csu_init>:
 8049c4c:	55                   	push   %ebp
 8049c4d:	89 e5                	mov    %esp,%ebp
 8049c4f:	57                   	push   %edi
 8049c50:	56                   	push   %esi
 8049c51:	31 f6                	xor    %esi,%esi
 8049c53:	53                   	push   %ebx
 8049c54:	e8 2f ec ff ff       	call   8048888 <__i686.get_pc_thunk.bx>
 8049c59:	81 c3 37 16 00 00    	add    $0x1637,%ebx
 8049c5f:	83 ec 0c             	sub    $0xc,%esp
 8049c62:	e8 19 ea ff ff       	call   8048680 <_init>
 8049c67:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8049c6d:	8d 93 20 ff ff ff    	lea    -0xe0(%ebx),%edx
 8049c73:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049c76:	29 d0                	sub    %edx,%eax
 8049c78:	c1 f8 02             	sar    $0x2,%eax
 8049c7b:	39 c6                	cmp    %eax,%esi
 8049c7d:	73 16                	jae    8049c95 <__libc_csu_init+0x49>
 8049c7f:	89 d7                	mov    %edx,%edi
 8049c81:	ff 14 b2             	call   *(%edx,%esi,4)
 8049c84:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049c87:	83 c6 01             	add    $0x1,%esi
 8049c8a:	29 f8                	sub    %edi,%eax
 8049c8c:	89 fa                	mov    %edi,%edx
 8049c8e:	c1 f8 02             	sar    $0x2,%eax
 8049c91:	39 c6                	cmp    %eax,%esi
 8049c93:	72 ec                	jb     8049c81 <__libc_csu_init+0x35>
 8049c95:	83 c4 0c             	add    $0xc,%esp
 8049c98:	5b                   	pop    %ebx
 8049c99:	5e                   	pop    %esi
 8049c9a:	5f                   	pop    %edi
 8049c9b:	5d                   	pop    %ebp
 8049c9c:	c3                   	ret    

08049c9d <__libc_csu_fini>:
 8049c9d:	55                   	push   %ebp
 8049c9e:	89 e5                	mov    %esp,%ebp
 8049ca0:	83 ec 18             	sub    $0x18,%esp
 8049ca3:	89 5d f4             	mov    %ebx,-0xc(%ebp)
 8049ca6:	e8 dd eb ff ff       	call   8048888 <__i686.get_pc_thunk.bx>
 8049cab:	81 c3 e5 15 00 00    	add    $0x15e5,%ebx
 8049cb1:	89 75 f8             	mov    %esi,-0x8(%ebp)
 8049cb4:	89 7d fc             	mov    %edi,-0x4(%ebp)
 8049cb7:	8d b3 20 ff ff ff    	lea    -0xe0(%ebx),%esi
 8049cbd:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 8049cc3:	29 fe                	sub    %edi,%esi
 8049cc5:	c1 fe 02             	sar    $0x2,%esi
 8049cc8:	eb 03                	jmp    8049ccd <__libc_csu_fini+0x30>
 8049cca:	ff 14 b7             	call   *(%edi,%esi,4)
 8049ccd:	83 ee 01             	sub    $0x1,%esi
 8049cd0:	83 fe ff             	cmp    $0xffffffff,%esi
 8049cd3:	75 f5                	jne    8049cca <__libc_csu_fini+0x2d>
 8049cd5:	e8 4a 00 00 00       	call   8049d24 <_fini>
 8049cda:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8049cdd:	8b 75 f8             	mov    -0x8(%ebp),%esi
 8049ce0:	8b 7d fc             	mov    -0x4(%ebp),%edi
 8049ce3:	89 ec                	mov    %ebp,%esp
 8049ce5:	5d                   	pop    %ebp
 8049ce6:	c3                   	ret    
 8049ce7:	90                   	nop
 8049ce8:	90                   	nop
 8049ce9:	90                   	nop
 8049cea:	90                   	nop
 8049ceb:	90                   	nop
 8049cec:	90                   	nop
 8049ced:	90                   	nop
 8049cee:	90                   	nop
 8049cef:	90                   	nop

08049cf0 <__do_global_ctors_aux>:
 8049cf0:	55                   	push   %ebp
 8049cf1:	89 e5                	mov    %esp,%ebp
 8049cf3:	53                   	push   %ebx
 8049cf4:	83 ec 04             	sub    $0x4,%esp
 8049cf7:	a1 b0 b1 04 08       	mov    0x804b1b0,%eax
 8049cfc:	83 f8 ff             	cmp    $0xffffffff,%eax
 8049cff:	74 1c                	je     8049d1d <__do_global_ctors_aux+0x2d>
 8049d01:	bb b0 b1 04 08       	mov    $0x804b1b0,%ebx
 8049d06:	8d 76 00             	lea    0x0(%esi),%esi
 8049d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8049d10:	ff d0                	call   *%eax
 8049d12:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8049d15:	83 eb 04             	sub    $0x4,%ebx
 8049d18:	83 f8 ff             	cmp    $0xffffffff,%eax
 8049d1b:	75 f3                	jne    8049d10 <__do_global_ctors_aux+0x20>
 8049d1d:	58                   	pop    %eax
 8049d1e:	5b                   	pop    %ebx
 8049d1f:	5d                   	pop    %ebp
 8049d20:	c3                   	ret    
 8049d21:	90                   	nop
 8049d22:	90                   	nop
 8049d23:	90                   	nop

Disassembly of section .fini:

08049d24 <_fini>:
 8049d24:	55                   	push   %ebp
 8049d25:	89 e5                	mov    %esp,%ebp
 8049d27:	53                   	push   %ebx
 8049d28:	e8 5b eb ff ff       	call   8048888 <__i686.get_pc_thunk.bx>
 8049d2d:	81 c3 63 15 00 00    	add    $0x1563,%ebx
 8049d33:	83 ec 04             	sub    $0x4,%esp
 8049d36:	e8 55 eb ff ff       	call   8048890 <__do_global_dtors_aux>
 8049d3b:	83 c4 04             	add    $0x4,%esp
 8049d3e:	5b                   	pop    %ebx
 8049d3f:	5d                   	pop    %ebp
 8049d40:	c3                   	ret    
